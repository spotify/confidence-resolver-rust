// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: confidence/iam/v1/iam.proto

package v1

import (
	_ "github.com/spotify/confidence-resolver-rust/openfeature-provider/go/confidence/proto/confidence/api"
	v1 "github.com/spotify/confidence-resolver-rust/openfeature-provider/go/confidence/proto/confidence/auth/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	durationpb "google.golang.org/protobuf/types/known/durationpb"
	_ "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/fieldmaskpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The different states that the key can be in.
type CryptoKey_State int32

const (
	// State has not been set.
	CryptoKey_STATE_UNSPECIFIED CryptoKey_State = 0
	// Key is currently being created.
	CryptoKey_CREATING CryptoKey_State = 1
	// Key has been created.
	CryptoKey_CREATED CryptoKey_State = 2
	// Key has been deleted.
	CryptoKey_DELETED CryptoKey_State = 3
)

// Enum value maps for CryptoKey_State.
var (
	CryptoKey_State_name = map[int32]string{
		0: "STATE_UNSPECIFIED",
		1: "CREATING",
		2: "CREATED",
		3: "DELETED",
	}
	CryptoKey_State_value = map[string]int32{
		"STATE_UNSPECIFIED": 0,
		"CREATING":          1,
		"CREATED":           2,
		"DELETED":           3,
	}
)

func (x CryptoKey_State) Enum() *CryptoKey_State {
	p := new(CryptoKey_State)
	*p = x
	return p
}

func (x CryptoKey_State) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CryptoKey_State) Descriptor() protoreflect.EnumDescriptor {
	return file_confidence_iam_v1_iam_proto_enumTypes[0].Descriptor()
}

func (CryptoKey_State) Type() protoreflect.EnumType {
	return &file_confidence_iam_v1_iam_proto_enumTypes[0]
}

func (x CryptoKey_State) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CryptoKey_State.Descriptor instead.
func (CryptoKey_State) EnumDescriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{0, 0}
}

// The kind of key. This controls the crypto used and number of bits of the key.
type CryptoKey_Kind int32

const (
	// Kind has not been specified.
	CryptoKey_KIND_UNSPECIFIED CryptoKey_Kind = 0
	// This crypto key can be used by Snowflake.
	CryptoKey_SNOWFLAKE CryptoKey_Kind = 1
)

// Enum value maps for CryptoKey_Kind.
var (
	CryptoKey_Kind_name = map[int32]string{
		0: "KIND_UNSPECIFIED",
		1: "SNOWFLAKE",
	}
	CryptoKey_Kind_value = map[string]int32{
		"KIND_UNSPECIFIED": 0,
		"SNOWFLAKE":        1,
	}
)

func (x CryptoKey_Kind) Enum() *CryptoKey_Kind {
	p := new(CryptoKey_Kind)
	*p = x
	return p
}

func (x CryptoKey_Kind) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CryptoKey_Kind) Descriptor() protoreflect.EnumDescriptor {
	return file_confidence_iam_v1_iam_proto_enumTypes[1].Descriptor()
}

func (CryptoKey_Kind) Type() protoreflect.EnumType {
	return &file_confidence_iam_v1_iam_proto_enumTypes[1]
}

func (x CryptoKey_Kind) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CryptoKey_Kind.Descriptor instead.
func (CryptoKey_Kind) EnumDescriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{0, 1}
}

// A cryptographic key that can be used by other services.
type CryptoKey struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the crypto key.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Pem encoded public key of this cryptographical key
	PublicKey string `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	// The kind of key. This controls the crypto used and number of bits of the key.
	Kind CryptoKey_Kind `protobuf:"varint,3,opt,name=kind,proto3,enum=confidence.iam.v1.CryptoKey_Kind" json:"kind,omitempty"`
	// The current state of the key.
	State CryptoKey_State `protobuf:"varint,4,opt,name=state,proto3,enum=confidence.iam.v1.CryptoKey_State" json:"state,omitempty"`
	// General labels for this resource.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Time when the crypto key was first created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Time when the crypto key was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Reference to the identity that created this crypto key.
	Creator string `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator,omitempty"`
	// Reference to the identity that last updated this crypto key.
	Updater       string `protobuf:"bytes,12,opt,name=updater,proto3" json:"updater,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CryptoKey) Reset() {
	*x = CryptoKey{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CryptoKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CryptoKey) ProtoMessage() {}

func (x *CryptoKey) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CryptoKey.ProtoReflect.Descriptor instead.
func (*CryptoKey) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{0}
}

func (x *CryptoKey) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CryptoKey) GetPublicKey() string {
	if x != nil {
		return x.PublicKey
	}
	return ""
}

func (x *CryptoKey) GetKind() CryptoKey_Kind {
	if x != nil {
		return x.Kind
	}
	return CryptoKey_KIND_UNSPECIFIED
}

func (x *CryptoKey) GetState() CryptoKey_State {
	if x != nil {
		return x.State
	}
	return CryptoKey_STATE_UNSPECIFIED
}

func (x *CryptoKey) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *CryptoKey) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *CryptoKey) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *CryptoKey) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *CryptoKey) GetUpdater() string {
	if x != nil {
		return x.Updater
	}
	return ""
}

// Represents the currently logged in user.
type CurrentUser struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The permissions the user currently has.
	Permissions []*PermissionWithScope `protobuf:"bytes,1,rep,name=permissions,proto3" json:"permissions,omitempty"`
	// The current user
	User *User `protobuf:"bytes,2,opt,name=user,proto3" json:"user,omitempty"`
	// List of accounts that the user is member of.
	AccountMemberships []*CurrentUser_AccountMembership `protobuf:"bytes,3,rep,name=account_memberships,json=accountMemberships,proto3" json:"account_memberships,omitempty"`
	// The currently logged in account.
	Account string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	// The OAuth2 client id for the service account used by this account.
	ServiceAccountOauth2ClientId string `protobuf:"bytes,5,opt,name=service_account_oauth2_client_id,json=serviceAccountOauth2ClientId,proto3" json:"service_account_oauth2_client_id,omitempty"`
	unknownFields                protoimpl.UnknownFields
	sizeCache                    protoimpl.SizeCache
}

func (x *CurrentUser) Reset() {
	*x = CurrentUser{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentUser) ProtoMessage() {}

func (x *CurrentUser) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentUser.ProtoReflect.Descriptor instead.
func (*CurrentUser) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{1}
}

func (x *CurrentUser) GetPermissions() []*PermissionWithScope {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *CurrentUser) GetUser() *User {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *CurrentUser) GetAccountMemberships() []*CurrentUser_AccountMembership {
	if x != nil {
		return x.AccountMemberships
	}
	return nil
}

func (x *CurrentUser) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CurrentUser) GetServiceAccountOauth2ClientId() string {
	if x != nil {
		return x.ServiceAccountOauth2ClientId
	}
	return ""
}

// The permission and its scope.
type PermissionWithScope struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Scope of the permission on the form <action>:<resource>.
	Scope string `protobuf:"bytes,1,opt,name=scope,proto3" json:"scope,omitempty"`
	// Permission.
	Permission    v1.Permission `protobuf:"varint,2,opt,name=permission,proto3,enum=confidence.auth.v1.Permission" json:"permission,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionWithScope) Reset() {
	*x = PermissionWithScope{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionWithScope) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionWithScope) ProtoMessage() {}

func (x *PermissionWithScope) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionWithScope.ProtoReflect.Descriptor instead.
func (*PermissionWithScope) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{2}
}

func (x *PermissionWithScope) GetScope() string {
	if x != nil {
		return x.Scope
	}
	return ""
}

func (x *PermissionWithScope) GetPermission() v1.Permission {
	if x != nil {
		return x.Permission
	}
	return v1.Permission(0)
}

// An API client that can be used to programmatically access the Confidence
// APIs.
type ApiClient struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the API client on the form `apiClients/<id>`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Human friendly name of the API client.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// A description of the API client, e.g. what it is for.
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// Id of the API client.
	ClientId string `protobuf:"bytes,4,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// The client secret for the client.
	ClientSecret string `protobuf:"bytes,5,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	// Permissions that the API client has.
	Permissions []v1.Permission `protobuf:"varint,6,rep,packed,name=permissions,proto3,enum=confidence.auth.v1.Permission" json:"permissions,omitempty"`
	// Roles that the API client has.
	Roles []string `protobuf:"bytes,12,rep,name=roles,proto3" json:"roles,omitempty"`
	// Time when the API client was first created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Time when the API client was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Reference to the identity that created this API client.
	Creator string `protobuf:"bytes,13,opt,name=creator,proto3" json:"creator,omitempty"`
	// Reference to the identity that last updated this API client.
	Updater string `protobuf:"bytes,14,opt,name=updater,proto3" json:"updater,omitempty"`
	// General labels for this resource.
	Labels        map[string]string `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ApiClient) Reset() {
	*x = ApiClient{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApiClient) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApiClient) ProtoMessage() {}

func (x *ApiClient) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApiClient.ProtoReflect.Descriptor instead.
func (*ApiClient) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{3}
}

func (x *ApiClient) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ApiClient) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ApiClient) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ApiClient) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *ApiClient) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *ApiClient) GetPermissions() []v1.Permission {
	if x != nil {
		return x.Permissions
	}
	return nil
}

func (x *ApiClient) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *ApiClient) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ApiClient) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ApiClient) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ApiClient) GetUpdater() string {
	if x != nil {
		return x.Updater
	}
	return ""
}

func (x *ApiClient) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Represents an identity that can perform operations in the system.
// Either a user, api client or an internal service.
type Identity struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the identity on the form `identities/<id>`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// User friendly name of the identity
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// What kind of identity is underlying
	//
	// Types that are valid to be assigned to IdentityKind:
	//
	//	*Identity_User
	//	*Identity_ApiClient
	//	*Identity_Service
	IdentityKind isIdentity_IdentityKind `protobuf_oneof:"identity_kind"`
	// Time when the user was first created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Time when the user was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// General labels for this resource.
	Labels        map[string]string `protobuf:"bytes,8,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Identity) Reset() {
	*x = Identity{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{4}
}

func (x *Identity) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Identity) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Identity) GetIdentityKind() isIdentity_IdentityKind {
	if x != nil {
		return x.IdentityKind
	}
	return nil
}

func (x *Identity) GetUser() string {
	if x != nil {
		if x, ok := x.IdentityKind.(*Identity_User); ok {
			return x.User
		}
	}
	return ""
}

func (x *Identity) GetApiClient() string {
	if x != nil {
		if x, ok := x.IdentityKind.(*Identity_ApiClient); ok {
			return x.ApiClient
		}
	}
	return ""
}

func (x *Identity) GetService() string {
	if x != nil {
		if x, ok := x.IdentityKind.(*Identity_Service); ok {
			return x.Service
		}
	}
	return ""
}

func (x *Identity) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Identity) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Identity) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

type isIdentity_IdentityKind interface {
	isIdentity_IdentityKind()
}

type Identity_User struct {
	// The actual user if any
	User string `protobuf:"bytes,3,opt,name=user,proto3,oneof"`
}

type Identity_ApiClient struct {
	// If this identity is an API client
	ApiClient string `protobuf:"bytes,4,opt,name=api_client,json=apiClient,proto3,oneof"`
}

type Identity_Service struct {
	// If the identity is a service
	Service string `protobuf:"bytes,5,opt,name=service,proto3,oneof"`
}

func (*Identity_User) isIdentity_IdentityKind() {}

func (*Identity_ApiClient) isIdentity_IdentityKind() {}

func (*Identity_Service) isIdentity_IdentityKind() {}

// (-- api-linter: core::0122::name-suffix=disabled
//
//	aip.dev/not-precedent: A name is a name is a name. --)
//
// A Confidence user.
type User struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the user on the form `users/<id>`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Full name of the user like John Doe.
	FullName string `protobuf:"bytes,2,opt,name=full_name,json=fullName,proto3" json:"full_name,omitempty"`
	// E-mail of the user.
	Email string `protobuf:"bytes,3,opt,name=email,proto3" json:"email,omitempty"`
	// Profile picture URI if exists, otherwise empty.
	PictureUri string `protobuf:"bytes,4,opt,name=picture_uri,json=pictureUri,proto3" json:"picture_uri,omitempty"`
	// Time of last login.
	LastLoginTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=last_login_time,json=lastLoginTime,proto3" json:"last_login_time,omitempty"`
	// Indicator of whether the user is blocked from logging in.
	Blocked bool `protobuf:"varint,6,opt,name=blocked,proto3" json:"blocked,omitempty"`
	// Time when the user was first created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Time when the user was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// General labels for this resource.
	Labels        map[string]string `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *User) Reset() {
	*x = User{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{5}
}

func (x *User) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *User) GetFullName() string {
	if x != nil {
		return x.FullName
	}
	return ""
}

func (x *User) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *User) GetPictureUri() string {
	if x != nil {
		return x.PictureUri
	}
	return ""
}

func (x *User) GetLastLoginTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastLoginTime
	}
	return nil
}

func (x *User) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

func (x *User) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *User) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *User) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// An invitation for an email to join a Confidence account.
type UserInvitation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the invitation on the form `userInvitations/<id>`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The email to the send the invitation to
	InvitedEmail string `protobuf:"bytes,2,opt,name=invited_email,json=invitedEmail,proto3" json:"invited_email,omitempty"`
	// The person that initiated the invite. The email sent to `invited_email` will contain this name. If not sent and
	// the token is an end user token the name of the currently logged in user will be used.
	// Required if the token is an API client token.
	Inviter string `protobuf:"bytes,3,opt,name=inviter,proto3" json:"inviter,omitempty"`
	// The roles that the user should get when accepting the invite. Must be at least 1 role.
	Roles []string `protobuf:"bytes,4,rep,name=roles,proto3" json:"roles,omitempty"`
	// The duration from create that the invite expires and is no longer valid. Defaults to 7 days if not specified.
	Ttl *durationpb.Duration `protobuf:"bytes,5,opt,name=ttl,proto3" json:"ttl,omitempty"`
	// The absolute time that the invite expires and is no longer valid.
	ExpirationTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=expiration_time,json=expirationTime,proto3" json:"expiration_time,omitempty"`
	// URI for accepting the invite.
	InvitationUri string `protobuf:"bytes,12,opt,name=invitation_uri,json=invitationUri,proto3" json:"invitation_uri,omitempty"`
	// Token required to accept the invite (part of the URI).
	InvitationToken string `protobuf:"bytes,13,opt,name=invitation_token,json=invitationToken,proto3" json:"invitation_token,omitempty"`
	// If true, no email will be sent with the invitation link.
	DisableInvitationEmail bool `protobuf:"varint,14,opt,name=disable_invitation_email,json=disableInvitationEmail,proto3" json:"disable_invitation_email,omitempty"`
	// Time when the user invitation was first created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Time when the user invitation was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Reference to the identity that created this user invitation.
	Creator string `protobuf:"bytes,15,opt,name=creator,proto3" json:"creator,omitempty"`
	// Reference to the identity that last updated this user invitation.
	Updater string `protobuf:"bytes,16,opt,name=updater,proto3" json:"updater,omitempty"`
	// General labels for this resource.
	Labels        map[string]string `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UserInvitation) Reset() {
	*x = UserInvitation{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UserInvitation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInvitation) ProtoMessage() {}

func (x *UserInvitation) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInvitation.ProtoReflect.Descriptor instead.
func (*UserInvitation) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{6}
}

func (x *UserInvitation) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UserInvitation) GetInvitedEmail() string {
	if x != nil {
		return x.InvitedEmail
	}
	return ""
}

func (x *UserInvitation) GetInviter() string {
	if x != nil {
		return x.Inviter
	}
	return ""
}

func (x *UserInvitation) GetRoles() []string {
	if x != nil {
		return x.Roles
	}
	return nil
}

func (x *UserInvitation) GetTtl() *durationpb.Duration {
	if x != nil {
		return x.Ttl
	}
	return nil
}

func (x *UserInvitation) GetExpirationTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpirationTime
	}
	return nil
}

func (x *UserInvitation) GetInvitationUri() string {
	if x != nil {
		return x.InvitationUri
	}
	return ""
}

func (x *UserInvitation) GetInvitationToken() string {
	if x != nil {
		return x.InvitationToken
	}
	return ""
}

func (x *UserInvitation) GetDisableInvitationEmail() bool {
	if x != nil {
		return x.DisableInvitationEmail
	}
	return false
}

func (x *UserInvitation) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *UserInvitation) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *UserInvitation) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *UserInvitation) GetUpdater() string {
	if x != nil {
		return x.Updater
	}
	return ""
}

func (x *UserInvitation) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// (-- api-linter: core::0123::resource-singular=disabled
//
//	aip.dev/not-precedent: We use oauth_app. --)
//
// Allows users of a third party app to authenticate towards Confidence and
// get an auth token.
type OAuthApp struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Name of the OAuthApp on the form `oauthApps/<id>`.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// The name to show for the app.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The client ID to use when authenticating.
	ClientId string `protobuf:"bytes,3,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	// The client secret to use when authenticating.
	ClientSecret string `protobuf:"bytes,4,opt,name=client_secret,json=clientSecret,proto3" json:"client_secret,omitempty"`
	// Description of this oauth app.
	Description string `protobuf:"bytes,5,opt,name=description,proto3" json:"description,omitempty"`
	// URI to a logo to show for the user while authenticating.
	LogoUri string `protobuf:"bytes,6,opt,name=logo_uri,json=logoUri,proto3" json:"logo_uri,omitempty"`
	// A list of URLs that the client is allowed to specify for the callback after authenticating.
	AllowedCallbackUrls []string `protobuf:"bytes,7,rep,name=allowed_callback_urls,json=allowedCallbackUrls,proto3" json:"allowed_callback_urls,omitempty"`
	// A list of logout URLs that the client is allowed to specify.
	AllowedLogoutUrls []string `protobuf:"bytes,8,rep,name=allowed_logout_urls,json=allowedLogoutUrls,proto3" json:"allowed_logout_urls,omitempty"`
	// A list of allowed origins for CORS.
	AllowedWebOrigins []string `protobuf:"bytes,9,rep,name=allowed_web_origins,json=allowedWebOrigins,proto3" json:"allowed_web_origins,omitempty"`
	// Time when the OAuthApp was first created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Time when the OAuthApp was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,11,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Reference to the identity that created this OAuthApp.
	Creator string `protobuf:"bytes,15,opt,name=creator,proto3" json:"creator,omitempty"`
	// Reference to the identity that last updated this OAuthApp.
	Updater string `protobuf:"bytes,16,opt,name=updater,proto3" json:"updater,omitempty"`
	// General labels for this resource.
	Labels        map[string]string `protobuf:"bytes,14,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *OAuthApp) Reset() {
	*x = OAuthApp{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *OAuthApp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OAuthApp) ProtoMessage() {}

func (x *OAuthApp) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OAuthApp.ProtoReflect.Descriptor instead.
func (*OAuthApp) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{7}
}

func (x *OAuthApp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *OAuthApp) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *OAuthApp) GetClientId() string {
	if x != nil {
		return x.ClientId
	}
	return ""
}

func (x *OAuthApp) GetClientSecret() string {
	if x != nil {
		return x.ClientSecret
	}
	return ""
}

func (x *OAuthApp) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *OAuthApp) GetLogoUri() string {
	if x != nil {
		return x.LogoUri
	}
	return ""
}

func (x *OAuthApp) GetAllowedCallbackUrls() []string {
	if x != nil {
		return x.AllowedCallbackUrls
	}
	return nil
}

func (x *OAuthApp) GetAllowedLogoutUrls() []string {
	if x != nil {
		return x.AllowedLogoutUrls
	}
	return nil
}

func (x *OAuthApp) GetAllowedWebOrigins() []string {
	if x != nil {
		return x.AllowedWebOrigins
	}
	return nil
}

func (x *OAuthApp) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *OAuthApp) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *OAuthApp) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *OAuthApp) GetUpdater() string {
	if x != nil {
		return x.Updater
	}
	return ""
}

func (x *OAuthApp) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// A Client allows an app to access certain Confidence services like
// resolving flags and sending events.
type Client struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resource name of the client.
	// For example:
	// `clients/1bhq4c2zqigdzqg6ufni`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Human friendly name of the client.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The last time this client was used to resolve a flag.
	LastSeenTime *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_seen_time,json=lastSeenTime,proto3" json:"last_seen_time,omitempty"`
	// General set of labels for this resource.
	Labels map[string]string `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Time when the client was first created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Time when the client was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Reference to the identity that created this client.
	Creator string `protobuf:"bytes,9,opt,name=creator,proto3" json:"creator,omitempty"`
	// Reference to the identity that last updated this client.
	Updater       string `protobuf:"bytes,10,opt,name=updater,proto3" json:"updater,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Client) Reset() {
	*x = Client{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Client) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Client) ProtoMessage() {}

func (x *Client) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Client.ProtoReflect.Descriptor instead.
func (*Client) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{8}
}

func (x *Client) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Client) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *Client) GetLastSeenTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeenTime
	}
	return nil
}

func (x *Client) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *Client) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *Client) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *Client) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *Client) GetUpdater() string {
	if x != nil {
		return x.Updater
	}
	return ""
}

// The credentials required for a client to access Confidence.
type ClientCredential struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The resource name of the client.
	// For example:
	// `clients/1bhq4c2zqigdzqg6ufni/credentials/3pxcfkkmi5sppg0lfa8d`
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Human friendly name of the credential.
	DisplayName string `protobuf:"bytes,2,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The credential method used by this client.
	//
	// Types that are valid to be assigned to Credential:
	//
	//	*ClientCredential_ClientSecret_
	Credential isClientCredential_Credential `protobuf_oneof:"credential"`
	// The last time this credential was used to resolve a flag.
	LastSeenTime *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=last_seen_time,json=lastSeenTime,proto3" json:"last_seen_time,omitempty"`
	// General set of labels for this resource.
	Labels map[string]string `protobuf:"bytes,5,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// Time when the client was first created.
	CreateTime *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`
	// Time when the client was last updated.
	UpdateTime *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=update_time,json=updateTime,proto3" json:"update_time,omitempty"`
	// Reference to the identity that created this credential.
	Creator string `protobuf:"bytes,10,opt,name=creator,proto3" json:"creator,omitempty"`
	// Reference to the identity that last updated this credential.
	Updater       string `protobuf:"bytes,11,opt,name=updater,proto3" json:"updater,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientCredential) Reset() {
	*x = ClientCredential{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCredential) ProtoMessage() {}

func (x *ClientCredential) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCredential.ProtoReflect.Descriptor instead.
func (*ClientCredential) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{9}
}

func (x *ClientCredential) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClientCredential) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *ClientCredential) GetCredential() isClientCredential_Credential {
	if x != nil {
		return x.Credential
	}
	return nil
}

func (x *ClientCredential) GetClientSecret() *ClientCredential_ClientSecret {
	if x != nil {
		if x, ok := x.Credential.(*ClientCredential_ClientSecret_); ok {
			return x.ClientSecret
		}
	}
	return nil
}

func (x *ClientCredential) GetLastSeenTime() *timestamppb.Timestamp {
	if x != nil {
		return x.LastSeenTime
	}
	return nil
}

func (x *ClientCredential) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *ClientCredential) GetCreateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.CreateTime
	}
	return nil
}

func (x *ClientCredential) GetUpdateTime() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdateTime
	}
	return nil
}

func (x *ClientCredential) GetCreator() string {
	if x != nil {
		return x.Creator
	}
	return ""
}

func (x *ClientCredential) GetUpdater() string {
	if x != nil {
		return x.Updater
	}
	return ""
}

type isClientCredential_Credential interface {
	isClientCredential_Credential()
}

type ClientCredential_ClientSecret_ struct {
	// A simple plaintext secret.
	ClientSecret *ClientCredential_ClientSecret `protobuf:"bytes,3,opt,name=client_secret,json=clientSecret,proto3,oneof"`
}

func (*ClientCredential_ClientSecret_) isClientCredential_Credential() {}

// Represents that a user is a member of an account.
type CurrentUser_AccountMembership struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The name of the account.
	Account string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	// The external id of the accounts.
	ExternalId string `protobuf:"bytes,2,opt,name=external_id,json=externalId,proto3" json:"external_id,omitempty"`
	// The human friendly name of the account.
	DisplayName string `protobuf:"bytes,3,opt,name=display_name,json=displayName,proto3" json:"display_name,omitempty"`
	// The string to pass when logging in.
	LoginId       string `protobuf:"bytes,4,opt,name=login_id,json=loginId,proto3" json:"login_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CurrentUser_AccountMembership) Reset() {
	*x = CurrentUser_AccountMembership{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CurrentUser_AccountMembership) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CurrentUser_AccountMembership) ProtoMessage() {}

func (x *CurrentUser_AccountMembership) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CurrentUser_AccountMembership.ProtoReflect.Descriptor instead.
func (*CurrentUser_AccountMembership) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{1, 0}
}

func (x *CurrentUser_AccountMembership) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CurrentUser_AccountMembership) GetExternalId() string {
	if x != nil {
		return x.ExternalId
	}
	return ""
}

func (x *CurrentUser_AccountMembership) GetDisplayName() string {
	if x != nil {
		return x.DisplayName
	}
	return ""
}

func (x *CurrentUser_AccountMembership) GetLoginId() string {
	if x != nil {
		return x.LoginId
	}
	return ""
}

// A simple plaintext secret.
type ClientCredential_ClientSecret struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The secret used to authenticate a client.
	Secret        string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientCredential_ClientSecret) Reset() {
	*x = ClientCredential_ClientSecret{}
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientCredential_ClientSecret) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientCredential_ClientSecret) ProtoMessage() {}

func (x *ClientCredential_ClientSecret) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_iam_v1_iam_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientCredential_ClientSecret.ProtoReflect.Descriptor instead.
func (*ClientCredential_ClientSecret) Descriptor() ([]byte, []int) {
	return file_confidence_iam_v1_iam_proto_rawDescGZIP(), []int{9, 1}
}

func (x *ClientCredential_ClientSecret) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

var File_confidence_iam_v1_iam_proto protoreflect.FileDescriptor

const file_confidence_iam_v1_iam_proto_rawDesc = "" +
	"\n" +
	"\x1bconfidence/iam/v1/iam.proto\x12\x11confidence.iam.v1\x1a\x1egoogle/protobuf/duration.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\x1a\x19google/api/resource.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1dconfidence/auth/v1/auth.proto\x1a google/protobuf/field_mask.proto\x1a\x17google/api/client.proto\x1a confidence/api/annotations.proto\"\x9d\x06\n" +
	"\tCryptoKey\x12\x18\n" +
	"\x04name\x18\x01 \x01(\tB\x04\xe2A\x01\bR\x04name\x12#\n" +
	"\n" +
	"public_key\x18\x02 \x01(\tB\x04\xe2A\x01\x03R\tpublicKey\x12;\n" +
	"\x04kind\x18\x03 \x01(\x0e2!.confidence.iam.v1.CryptoKey.KindB\x04\xe2A\x01\x02R\x04kind\x12?\n" +
	"\x05state\x18\x04 \x01(\x0e2\".confidence.iam.v1.CryptoKey.StateB\x05\xe2A\x02\x02\x03R\x05state\x12F\n" +
	"\x06labels\x18\x05 \x03(\v2(.confidence.iam.v1.CryptoKey.LabelsEntryB\x04\xe2A\x01\x01R\x06labels\x12B\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"createTime\x12B\n" +
	"\vupdate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"updateTime\x12?\n" +
	"\acreator\x18\n" +
	" \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\acreator\x12?\n" +
	"\aupdater\x18\f \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\aupdater\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"F\n" +
	"\x05State\x12\x15\n" +
	"\x11STATE_UNSPECIFIED\x10\x00\x12\f\n" +
	"\bCREATING\x10\x01\x12\v\n" +
	"\aCREATED\x10\x02\x12\v\n" +
	"\aDELETED\x10\x03\"+\n" +
	"\x04Kind\x12\x14\n" +
	"\x10KIND_UNSPECIFIED\x10\x00\x12\r\n" +
	"\tSNOWFLAKE\x10\x01:Q\xeaAN\n" +
	"\x1ciam.confidence.dev/CryptoKey\x12\x17cryptoKeys/{crypto_key}*\n" +
	"cryptoKeys2\tcryptoKey\"\x8e\x04\n" +
	"\vCurrentUser\x12N\n" +
	"\vpermissions\x18\x01 \x03(\v2&.confidence.iam.v1.PermissionWithScopeB\x04\xe2A\x01\x01R\vpermissions\x121\n" +
	"\x04user\x18\x02 \x01(\v2\x17.confidence.iam.v1.UserB\x04\xe2A\x01\x01R\x04user\x12g\n" +
	"\x13account_memberships\x18\x03 \x03(\v20.confidence.iam.v1.CurrentUser.AccountMembershipB\x04\xe2A\x01\x01R\x12accountMemberships\x12\x1e\n" +
	"\aaccount\x18\x04 \x01(\tB\x04\xe2A\x01\x02R\aaccount\x12L\n" +
	" service_account_oauth2_client_id\x18\x05 \x01(\tB\x04\xe2A\x01\x02R\x1cserviceAccountOauth2ClientId\x1a\xa4\x01\n" +
	"\x11AccountMembership\x12\x1e\n" +
	"\aaccount\x18\x01 \x01(\tB\x04\xe2A\x01\x02R\aaccount\x12%\n" +
	"\vexternal_id\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\n" +
	"externalId\x12'\n" +
	"\fdisplay_name\x18\x03 \x01(\tB\x04\xe2A\x01\x02R\vdisplayName\x12\x1f\n" +
	"\blogin_id\x18\x04 \x01(\tB\x04\xe2A\x01\x02R\aloginId\"w\n" +
	"\x13PermissionWithScope\x12\x1a\n" +
	"\x05scope\x18\x01 \x01(\tB\x04\xe2A\x01\x02R\x05scope\x12D\n" +
	"\n" +
	"permission\x18\x02 \x01(\x0e2\x1e.confidence.auth.v1.PermissionB\x04\xe2A\x01\x02R\n" +
	"permission\"\xa5\x06\n" +
	"\tApiClient\x12\x18\n" +
	"\x04name\x18\x01 \x01(\tB\x04\xe2A\x01\bR\x04name\x12'\n" +
	"\fdisplay_name\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\vdisplayName\x12&\n" +
	"\vdescription\x18\x03 \x01(\tB\x04\xe2A\x01\x01R\vdescription\x12\"\n" +
	"\tclient_id\x18\x04 \x01(\tB\x05\xe2A\x02\x02\x03R\bclientId\x12)\n" +
	"\rclient_secret\x18\x05 \x01(\tB\x04\xe2A\x01\x03R\fclientSecret\x12F\n" +
	"\vpermissions\x18\x06 \x03(\x0e2\x1e.confidence.auth.v1.PermissionB\x04\xe2A\x01\x01R\vpermissions\x126\n" +
	"\x05roles\x18\f \x03(\tB \xe2A\x01\x01\xfaA\x19\n" +
	"\x17iam.confidence.dev/RoleR\x05roles\x12B\n" +
	"\vcreate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"createTime\x12B\n" +
	"\vupdate_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"updateTime\x12?\n" +
	"\acreator\x18\r \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\acreator\x12?\n" +
	"\aupdater\x18\x0e \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\aupdater\x12F\n" +
	"\x06labels\x18\v \x03(\v2(.confidence.iam.v1.ApiClient.LabelsEntryB\x04\xe2A\x01\x01R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01:Q\xeaAN\n" +
	"\x1ciam.confidence.dev/ApiClient\x12\x17apiClients/{api_client}*\n" +
	"apiClients2\tapiClient\"\xcb\x04\n" +
	"\bIdentity\x12\x18\n" +
	"\x04name\x18\x01 \x01(\tB\x04\xe2A\x01\bR\x04name\x12'\n" +
	"\fdisplay_name\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\vdisplayName\x122\n" +
	"\x04user\x18\x03 \x01(\tB\x1c\xfaA\x19\n" +
	"\x17iam.confidence.dev/UserH\x00R\x04user\x12B\n" +
	"\n" +
	"api_client\x18\x04 \x01(\tB!\xfaA\x1e\n" +
	"\x1ciam.confidence.dev/ApiClientH\x00R\tapiClient\x12\x1a\n" +
	"\aservice\x18\x05 \x01(\tH\x00R\aservice\x12B\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"createTime\x12B\n" +
	"\vupdate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"updateTime\x12E\n" +
	"\x06labels\x18\b \x03(\v2'.confidence.iam.v1.Identity.LabelsEntryB\x04\xe2A\x01\x01R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01:M\xeaAJ\n" +
	"\x1biam.confidence.dev/Identity\x12\x15identities/{identity}*\n" +
	"identities2\bidentityB\x0f\n" +
	"\ridentity_kind\"\xa9\x04\n" +
	"\x04User\x12\x18\n" +
	"\x04name\x18\x01 \x01(\tB\x04\xe2A\x01\bR\x04name\x12!\n" +
	"\tfull_name\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\bfullName\x12\x1a\n" +
	"\x05email\x18\x03 \x01(\tB\x04\xe2A\x01\x02R\x05email\x12\x1f\n" +
	"\vpicture_uri\x18\x04 \x01(\tR\n" +
	"pictureUri\x12H\n" +
	"\x0flast_login_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\x04\xe2A\x01\x03R\rlastLoginTime\x12\x1e\n" +
	"\ablocked\x18\x06 \x01(\bB\x04\xe2A\x01\x03R\ablocked\x12B\n" +
	"\vcreate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"createTime\x12B\n" +
	"\vupdate_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"updateTime\x12A\n" +
	"\x06labels\x18\t \x03(\v2#.confidence.iam.v1.User.LabelsEntryB\x04\xe2A\x01\x01R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01:7\xeaA4\n" +
	"\x17iam.confidence.dev/User\x12\fusers/{user}*\x05users2\x04user\"\xca\a\n" +
	"\x0eUserInvitation\x12\x18\n" +
	"\x04name\x18\x01 \x01(\tB\x04\xe2A\x01\bR\x04name\x12)\n" +
	"\rinvited_email\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\finvitedEmail\x12\x1e\n" +
	"\ainviter\x18\x03 \x01(\tB\x04\xe2A\x01\x01R\ainviter\x126\n" +
	"\x05roles\x18\x04 \x03(\tB \xe2A\x01\x02\xfaA\x19\n" +
	"\x17iam.confidence.dev/RoleR\x05roles\x121\n" +
	"\x03ttl\x18\x05 \x01(\v2\x19.google.protobuf.DurationB\x04\xe2A\x01\x01R\x03ttl\x12J\n" +
	"\x0fexpiration_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\x0eexpirationTime\x12,\n" +
	"\x0einvitation_uri\x18\f \x01(\tB\x05\xe2A\x02\x02\x03R\rinvitationUri\x120\n" +
	"\x10invitation_token\x18\r \x01(\tB\x05\xe2A\x02\x02\x03R\x0finvitationToken\x12>\n" +
	"\x18disable_invitation_email\x18\x0e \x01(\bB\x04\xe2A\x01\x01R\x16disableInvitationEmail\x12B\n" +
	"\vcreate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"createTime\x12B\n" +
	"\vupdate_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"updateTime\x12?\n" +
	"\acreator\x18\x0f \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\acreator\x12?\n" +
	"\aupdater\x18\x10 \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\aupdater\x12K\n" +
	"\x06labels\x18\v \x03(\v2-.confidence.iam.v1.UserInvitation.LabelsEntryB\x04\xe2A\x01\x01R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01:j\xeaAg\n" +
	"!iam.confidence.dev/UserInvitation\x12!userInvitations/{user_invitation}*\x0fuserInvitations2\x0euserInvitation\"\xe6\x06\n" +
	"\bOAuthApp\x12\x18\n" +
	"\x04name\x18\x01 \x01(\tB\x04\xe2A\x01\bR\x04name\x12'\n" +
	"\fdisplay_name\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\vdisplayName\x12\"\n" +
	"\tclient_id\x18\x03 \x01(\tB\x05\xe2A\x02\x02\x03R\bclientId\x12*\n" +
	"\rclient_secret\x18\x04 \x01(\tB\x05\xe2A\x02\x02\x03R\fclientSecret\x12&\n" +
	"\vdescription\x18\x05 \x01(\tB\x04\xe2A\x01\x01R\vdescription\x12\x1f\n" +
	"\blogo_uri\x18\x06 \x01(\tB\x04\xe2A\x01\x01R\alogoUri\x128\n" +
	"\x15allowed_callback_urls\x18\a \x03(\tB\x04\xe2A\x01\x01R\x13allowedCallbackUrls\x124\n" +
	"\x13allowed_logout_urls\x18\b \x03(\tB\x04\xe2A\x01\x01R\x11allowedLogoutUrls\x124\n" +
	"\x13allowed_web_origins\x18\t \x03(\tB\x04\xe2A\x01\x01R\x11allowedWebOrigins\x12B\n" +
	"\vcreate_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"createTime\x12B\n" +
	"\vupdate_time\x18\v \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"updateTime\x12?\n" +
	"\acreator\x18\x0f \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\acreator\x12?\n" +
	"\aupdater\x18\x10 \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\aupdater\x12E\n" +
	"\x06labels\x18\x0e \x03(\v2'.confidence.iam.v1.OAuthApp.LabelsEntryB\x04\xe2A\x01\x01R\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01:L\xeaAI\n" +
	"\x1biam.confidence.dev/OAuthApp\x12\x15oauthApps/{oauth_app}*\toauthApps2\boauthApp\"\xe1\x04\n" +
	"\x06Client\x12\x19\n" +
	"\x04name\x18\x01 \x01(\tB\x05\xe2A\x02\x03\bR\x04name\x12'\n" +
	"\fdisplay_name\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\vdisplayName\x12F\n" +
	"\x0elast_seen_time\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampB\x04\xe2A\x01\x03R\flastSeenTime\x12C\n" +
	"\x06labels\x18\x04 \x03(\v2%.confidence.iam.v1.Client.LabelsEntryB\x04\xe2A\x01\x01R\x06labels\x12B\n" +
	"\vcreate_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"createTime\x12B\n" +
	"\vupdate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"updateTime\x12?\n" +
	"\acreator\x18\t \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\acreator\x12?\n" +
	"\aupdater\x18\n" +
	" \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\aupdater\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01:A\xeaA>\n" +
	"\x19iam.confidence.dev/Client\x12\x10clients/{client}*\aclients2\x06client\"\xc6\x06\n" +
	"\x10ClientCredential\x12\x18\n" +
	"\x04name\x18\x01 \x01(\tB\x04\xe2A\x01\bR\x04name\x12'\n" +
	"\fdisplay_name\x18\x02 \x01(\tB\x04\xe2A\x01\x02R\vdisplayName\x12]\n" +
	"\rclient_secret\x18\x03 \x01(\v20.confidence.iam.v1.ClientCredential.ClientSecretB\x04\xe2A\x01\x01H\x00R\fclientSecret\x12F\n" +
	"\x0elast_seen_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampB\x04\xe2A\x01\x03R\flastSeenTime\x12M\n" +
	"\x06labels\x18\x05 \x03(\v2/.confidence.iam.v1.ClientCredential.LabelsEntryB\x04\xe2A\x01\x01R\x06labels\x12B\n" +
	"\vcreate_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"createTime\x12B\n" +
	"\vupdate_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampB\x05\xe2A\x02\x02\x03R\n" +
	"updateTime\x12?\n" +
	"\acreator\x18\n" +
	" \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\acreator\x12?\n" +
	"\aupdater\x18\v \x01(\tB%\xe2A\x02\x03\x02\xfaA\x1d\n" +
	"\x1biam.confidence.dev/IdentityR\aupdater\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a,\n" +
	"\fClientSecret\x12\x1c\n" +
	"\x06secret\x18\x01 \x01(\tB\x04\xe2A\x01\x03R\x06secret:x\xeaAu\n" +
	"#iam.confidence.dev/ClientCredential\x12)clients/{client}/credentials/{credential}*\x11clientCredentials2\x10clientCredentialB\f\n" +
	"\n" +
	"credentialB+\n" +
	"\x1dcom.spotify.confidence.iam.v1B\bIamProtoP\x01b\x06proto3"

var (
	file_confidence_iam_v1_iam_proto_rawDescOnce sync.Once
	file_confidence_iam_v1_iam_proto_rawDescData []byte
)

func file_confidence_iam_v1_iam_proto_rawDescGZIP() []byte {
	file_confidence_iam_v1_iam_proto_rawDescOnce.Do(func() {
		file_confidence_iam_v1_iam_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_confidence_iam_v1_iam_proto_rawDesc), len(file_confidence_iam_v1_iam_proto_rawDesc)))
	})
	return file_confidence_iam_v1_iam_proto_rawDescData
}

var file_confidence_iam_v1_iam_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_confidence_iam_v1_iam_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_confidence_iam_v1_iam_proto_goTypes = []any{
	(CryptoKey_State)(0),                  // 0: confidence.iam.v1.CryptoKey.State
	(CryptoKey_Kind)(0),                   // 1: confidence.iam.v1.CryptoKey.Kind
	(*CryptoKey)(nil),                     // 2: confidence.iam.v1.CryptoKey
	(*CurrentUser)(nil),                   // 3: confidence.iam.v1.CurrentUser
	(*PermissionWithScope)(nil),           // 4: confidence.iam.v1.PermissionWithScope
	(*ApiClient)(nil),                     // 5: confidence.iam.v1.ApiClient
	(*Identity)(nil),                      // 6: confidence.iam.v1.Identity
	(*User)(nil),                          // 7: confidence.iam.v1.User
	(*UserInvitation)(nil),                // 8: confidence.iam.v1.UserInvitation
	(*OAuthApp)(nil),                      // 9: confidence.iam.v1.OAuthApp
	(*Client)(nil),                        // 10: confidence.iam.v1.Client
	(*ClientCredential)(nil),              // 11: confidence.iam.v1.ClientCredential
	nil,                                   // 12: confidence.iam.v1.CryptoKey.LabelsEntry
	(*CurrentUser_AccountMembership)(nil), // 13: confidence.iam.v1.CurrentUser.AccountMembership
	nil,                                   // 14: confidence.iam.v1.ApiClient.LabelsEntry
	nil,                                   // 15: confidence.iam.v1.Identity.LabelsEntry
	nil,                                   // 16: confidence.iam.v1.User.LabelsEntry
	nil,                                   // 17: confidence.iam.v1.UserInvitation.LabelsEntry
	nil,                                   // 18: confidence.iam.v1.OAuthApp.LabelsEntry
	nil,                                   // 19: confidence.iam.v1.Client.LabelsEntry
	nil,                                   // 20: confidence.iam.v1.ClientCredential.LabelsEntry
	(*ClientCredential_ClientSecret)(nil), // 21: confidence.iam.v1.ClientCredential.ClientSecret
	(*timestamppb.Timestamp)(nil),         // 22: google.protobuf.Timestamp
	(v1.Permission)(0),                    // 23: confidence.auth.v1.Permission
	(*durationpb.Duration)(nil),           // 24: google.protobuf.Duration
}
var file_confidence_iam_v1_iam_proto_depIdxs = []int32{
	1,  // 0: confidence.iam.v1.CryptoKey.kind:type_name -> confidence.iam.v1.CryptoKey.Kind
	0,  // 1: confidence.iam.v1.CryptoKey.state:type_name -> confidence.iam.v1.CryptoKey.State
	12, // 2: confidence.iam.v1.CryptoKey.labels:type_name -> confidence.iam.v1.CryptoKey.LabelsEntry
	22, // 3: confidence.iam.v1.CryptoKey.create_time:type_name -> google.protobuf.Timestamp
	22, // 4: confidence.iam.v1.CryptoKey.update_time:type_name -> google.protobuf.Timestamp
	4,  // 5: confidence.iam.v1.CurrentUser.permissions:type_name -> confidence.iam.v1.PermissionWithScope
	7,  // 6: confidence.iam.v1.CurrentUser.user:type_name -> confidence.iam.v1.User
	13, // 7: confidence.iam.v1.CurrentUser.account_memberships:type_name -> confidence.iam.v1.CurrentUser.AccountMembership
	23, // 8: confidence.iam.v1.PermissionWithScope.permission:type_name -> confidence.auth.v1.Permission
	23, // 9: confidence.iam.v1.ApiClient.permissions:type_name -> confidence.auth.v1.Permission
	22, // 10: confidence.iam.v1.ApiClient.create_time:type_name -> google.protobuf.Timestamp
	22, // 11: confidence.iam.v1.ApiClient.update_time:type_name -> google.protobuf.Timestamp
	14, // 12: confidence.iam.v1.ApiClient.labels:type_name -> confidence.iam.v1.ApiClient.LabelsEntry
	22, // 13: confidence.iam.v1.Identity.create_time:type_name -> google.protobuf.Timestamp
	22, // 14: confidence.iam.v1.Identity.update_time:type_name -> google.protobuf.Timestamp
	15, // 15: confidence.iam.v1.Identity.labels:type_name -> confidence.iam.v1.Identity.LabelsEntry
	22, // 16: confidence.iam.v1.User.last_login_time:type_name -> google.protobuf.Timestamp
	22, // 17: confidence.iam.v1.User.create_time:type_name -> google.protobuf.Timestamp
	22, // 18: confidence.iam.v1.User.update_time:type_name -> google.protobuf.Timestamp
	16, // 19: confidence.iam.v1.User.labels:type_name -> confidence.iam.v1.User.LabelsEntry
	24, // 20: confidence.iam.v1.UserInvitation.ttl:type_name -> google.protobuf.Duration
	22, // 21: confidence.iam.v1.UserInvitation.expiration_time:type_name -> google.protobuf.Timestamp
	22, // 22: confidence.iam.v1.UserInvitation.create_time:type_name -> google.protobuf.Timestamp
	22, // 23: confidence.iam.v1.UserInvitation.update_time:type_name -> google.protobuf.Timestamp
	17, // 24: confidence.iam.v1.UserInvitation.labels:type_name -> confidence.iam.v1.UserInvitation.LabelsEntry
	22, // 25: confidence.iam.v1.OAuthApp.create_time:type_name -> google.protobuf.Timestamp
	22, // 26: confidence.iam.v1.OAuthApp.update_time:type_name -> google.protobuf.Timestamp
	18, // 27: confidence.iam.v1.OAuthApp.labels:type_name -> confidence.iam.v1.OAuthApp.LabelsEntry
	22, // 28: confidence.iam.v1.Client.last_seen_time:type_name -> google.protobuf.Timestamp
	19, // 29: confidence.iam.v1.Client.labels:type_name -> confidence.iam.v1.Client.LabelsEntry
	22, // 30: confidence.iam.v1.Client.create_time:type_name -> google.protobuf.Timestamp
	22, // 31: confidence.iam.v1.Client.update_time:type_name -> google.protobuf.Timestamp
	21, // 32: confidence.iam.v1.ClientCredential.client_secret:type_name -> confidence.iam.v1.ClientCredential.ClientSecret
	22, // 33: confidence.iam.v1.ClientCredential.last_seen_time:type_name -> google.protobuf.Timestamp
	20, // 34: confidence.iam.v1.ClientCredential.labels:type_name -> confidence.iam.v1.ClientCredential.LabelsEntry
	22, // 35: confidence.iam.v1.ClientCredential.create_time:type_name -> google.protobuf.Timestamp
	22, // 36: confidence.iam.v1.ClientCredential.update_time:type_name -> google.protobuf.Timestamp
	37, // [37:37] is the sub-list for method output_type
	37, // [37:37] is the sub-list for method input_type
	37, // [37:37] is the sub-list for extension type_name
	37, // [37:37] is the sub-list for extension extendee
	0,  // [0:37] is the sub-list for field type_name
}

func init() { file_confidence_iam_v1_iam_proto_init() }
func file_confidence_iam_v1_iam_proto_init() {
	if File_confidence_iam_v1_iam_proto != nil {
		return
	}
	file_confidence_iam_v1_iam_proto_msgTypes[4].OneofWrappers = []any{
		(*Identity_User)(nil),
		(*Identity_ApiClient)(nil),
		(*Identity_Service)(nil),
	}
	file_confidence_iam_v1_iam_proto_msgTypes[9].OneofWrappers = []any{
		(*ClientCredential_ClientSecret_)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_confidence_iam_v1_iam_proto_rawDesc), len(file_confidence_iam_v1_iam_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_confidence_iam_v1_iam_proto_goTypes,
		DependencyIndexes: file_confidence_iam_v1_iam_proto_depIdxs,
		EnumInfos:         file_confidence_iam_v1_iam_proto_enumTypes,
		MessageInfos:      file_confidence_iam_v1_iam_proto_msgTypes,
	}.Build()
	File_confidence_iam_v1_iam_proto = out.File
	file_confidence_iam_v1_iam_proto_goTypes = nil
	file_confidence_iam_v1_iam_proto_depIdxs = nil
}

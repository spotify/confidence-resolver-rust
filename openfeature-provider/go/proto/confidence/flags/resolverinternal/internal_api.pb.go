// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: confidence/flags/resolver/v1/internal_api.proto

package resolverinternal

import (
	_ "github.com/spotify/confidence-resolver-rust/openfeature-provider/go/confidence/proto/confidence/api"
	_ "github.com/spotify/confidence-resolver-rust/openfeature-provider/go/confidence/proto/confidence/auth/v1"
	v1 "github.com/spotify/confidence-resolver-rust/openfeature-provider/go/confidence/proto/confidence/flags/admin/v1"
	_ "github.com/spotify/confidence-resolver-rust/openfeature-provider/go/confidence/proto/confidence/flags/admin/v1/events"
	resolverevents "github.com/spotify/confidence-resolver-rust/openfeature-provider/go/confidence/proto/confidence/flags/resolverevents"
	resolvertypes "github.com/spotify/confidence-resolver-rust/openfeature-provider/go/confidence/proto/confidence/flags/resolvertypes"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	_ "google.golang.org/genproto/googleapis/api/visibility"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The service that allows to report flag assigned and other client-side flag
// operations, useful when the resolve engine runs on the customer's premises
// (e.g. side-car)
type WriteFlagLogsRequest struct {
	state             protoimpl.MessageState         `protogen:"open.v1"`
	FlagAssigned      []*resolverevents.FlagAssigned `protobuf:"bytes,1,rep,name=flag_assigned,json=flagAssigned,proto3" json:"flag_assigned,omitempty"`
	TelemetryData     *TelemetryData                 `protobuf:"bytes,2,opt,name=telemetry_data,json=telemetryData,proto3" json:"telemetry_data,omitempty"`
	ClientResolveInfo []*v1.ClientResolveInfo        `protobuf:"bytes,3,rep,name=client_resolve_info,json=clientResolveInfo,proto3" json:"client_resolve_info,omitempty"`
	FlagResolveInfo   []*v1.FlagResolveInfo          `protobuf:"bytes,4,rep,name=flag_resolve_info,json=flagResolveInfo,proto3" json:"flag_resolve_info,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *WriteFlagLogsRequest) Reset() {
	*x = WriteFlagLogsRequest{}
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFlagLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFlagLogsRequest) ProtoMessage() {}

func (x *WriteFlagLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFlagLogsRequest.ProtoReflect.Descriptor instead.
func (*WriteFlagLogsRequest) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_internal_api_proto_rawDescGZIP(), []int{0}
}

func (x *WriteFlagLogsRequest) GetFlagAssigned() []*resolverevents.FlagAssigned {
	if x != nil {
		return x.FlagAssigned
	}
	return nil
}

func (x *WriteFlagLogsRequest) GetTelemetryData() *TelemetryData {
	if x != nil {
		return x.TelemetryData
	}
	return nil
}

func (x *WriteFlagLogsRequest) GetClientResolveInfo() []*v1.ClientResolveInfo {
	if x != nil {
		return x.ClientResolveInfo
	}
	return nil
}

func (x *WriteFlagLogsRequest) GetFlagResolveInfo() []*v1.FlagResolveInfo {
	if x != nil {
		return x.FlagResolveInfo
	}
	return nil
}

type WriteFlagLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFlagLogsResponse) Reset() {
	*x = WriteFlagLogsResponse{}
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFlagLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFlagLogsResponse) ProtoMessage() {}

func (x *WriteFlagLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFlagLogsResponse.ProtoReflect.Descriptor instead.
func (*WriteFlagLogsResponse) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_internal_api_proto_rawDescGZIP(), []int{1}
}

// A request to write flag assignments
type WriteFlagAssignedRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// List of flag assigned events to write
	FlagAssigned  []*resolverevents.FlagAssigned `protobuf:"bytes,1,rep,name=flag_assigned,json=flagAssigned,proto3" json:"flag_assigned,omitempty"`
	TelemetryData *TelemetryData                 `protobuf:"bytes,2,opt,name=telemetry_data,json=telemetryData,proto3" json:"telemetry_data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFlagAssignedRequest) Reset() {
	*x = WriteFlagAssignedRequest{}
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFlagAssignedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFlagAssignedRequest) ProtoMessage() {}

func (x *WriteFlagAssignedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFlagAssignedRequest.ProtoReflect.Descriptor instead.
func (*WriteFlagAssignedRequest) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_internal_api_proto_rawDescGZIP(), []int{2}
}

func (x *WriteFlagAssignedRequest) GetFlagAssigned() []*resolverevents.FlagAssigned {
	if x != nil {
		return x.FlagAssigned
	}
	return nil
}

func (x *WriteFlagAssignedRequest) GetTelemetryData() *TelemetryData {
	if x != nil {
		return x.TelemetryData
	}
	return nil
}

// Response to writing flag assignments
type WriteFlagAssignedResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The total number of assigned flags, should equal the sum of the flag counts in each flag
	// assigned event.
	AssignedFlags int64 `protobuf:"varint,1,opt,name=assigned_flags,json=assignedFlags,proto3" json:"assigned_flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WriteFlagAssignedResponse) Reset() {
	*x = WriteFlagAssignedResponse{}
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WriteFlagAssignedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WriteFlagAssignedResponse) ProtoMessage() {}

func (x *WriteFlagAssignedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WriteFlagAssignedResponse.ProtoReflect.Descriptor instead.
func (*WriteFlagAssignedResponse) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_internal_api_proto_rawDescGZIP(), []int{3}
}

func (x *WriteFlagAssignedResponse) GetAssignedFlags() int64 {
	if x != nil {
		return x.AssignedFlags
	}
	return 0
}

// Collection of telemetry metrics, usually included in request messages to
// monitor sender-side issues or performance
type TelemetryData struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// "events" dropped from the sender to due to issues or inefficiencies.
	// This is implemented as a delta counter between TelemetryData messages
	DroppedEvents int64 `protobuf:"varint,1,opt,name=dropped_events,json=droppedEvents,proto3" json:"dropped_events,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TelemetryData) Reset() {
	*x = TelemetryData{}
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TelemetryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TelemetryData) ProtoMessage() {}

func (x *TelemetryData) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TelemetryData.ProtoReflect.Descriptor instead.
func (*TelemetryData) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_internal_api_proto_rawDescGZIP(), []int{4}
}

func (x *TelemetryData) GetDroppedEvents() int64 {
	if x != nil {
		return x.DroppedEvents
	}
	return 0
}

type ResolveToken struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to ResolveToken:
	//
	//	*ResolveToken_TokenV1
	ResolveToken  isResolveToken_ResolveToken `protobuf_oneof:"resolve_token"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolveToken) Reset() {
	*x = ResolveToken{}
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveToken) ProtoMessage() {}

func (x *ResolveToken) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveToken.ProtoReflect.Descriptor instead.
func (*ResolveToken) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_internal_api_proto_rawDescGZIP(), []int{5}
}

func (x *ResolveToken) GetResolveToken() isResolveToken_ResolveToken {
	if x != nil {
		return x.ResolveToken
	}
	return nil
}

func (x *ResolveToken) GetTokenV1() *ResolveTokenV1 {
	if x != nil {
		if x, ok := x.ResolveToken.(*ResolveToken_TokenV1); ok {
			return x.TokenV1
		}
	}
	return nil
}

type isResolveToken_ResolveToken interface {
	isResolveToken_ResolveToken()
}

type ResolveToken_TokenV1 struct {
	TokenV1 *ResolveTokenV1 `protobuf:"bytes,1,opt,name=token_v1,json=tokenV1,proto3,oneof"`
}

func (*ResolveToken_TokenV1) isResolveToken_ResolveToken() {}

type ResolveTokenV1 struct {
	state             protoimpl.MessageState                  `protogen:"open.v1"`
	EvaluationContext *structpb.Struct                        `protobuf:"bytes,1,opt,name=evaluation_context,json=evaluationContext,proto3" json:"evaluation_context,omitempty"`
	Assignments       map[string]*ResolveTokenV1_AssignedFlag `protobuf:"bytes,2,rep,name=assignments,proto3" json:"assignments,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	ResolveId         string                                  `protobuf:"bytes,3,opt,name=resolve_id,json=resolveId,proto3" json:"resolve_id,omitempty"`
	// The account that the resolve was made for
	Account       string `protobuf:"bytes,4,opt,name=account,proto3" json:"account,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ResolveTokenV1) Reset() {
	*x = ResolveTokenV1{}
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveTokenV1) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveTokenV1) ProtoMessage() {}

func (x *ResolveTokenV1) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveTokenV1.ProtoReflect.Descriptor instead.
func (*ResolveTokenV1) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_internal_api_proto_rawDescGZIP(), []int{6}
}

func (x *ResolveTokenV1) GetEvaluationContext() *structpb.Struct {
	if x != nil {
		return x.EvaluationContext
	}
	return nil
}

func (x *ResolveTokenV1) GetAssignments() map[string]*ResolveTokenV1_AssignedFlag {
	if x != nil {
		return x.Assignments
	}
	return nil
}

func (x *ResolveTokenV1) GetResolveId() string {
	if x != nil {
		return x.ResolveId
	}
	return ""
}

func (x *ResolveTokenV1) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

type ResolveTokenV1_AssignedFlag struct {
	state                  protoimpl.MessageState                  `protogen:"open.v1"`
	Flag                   string                                  `protobuf:"bytes,1,opt,name=flag,proto3" json:"flag,omitempty"`
	TargetingKey           string                                  `protobuf:"bytes,2,opt,name=targeting_key,json=targetingKey,proto3" json:"targeting_key,omitempty"`
	TargetingKeySelector   string                                  `protobuf:"bytes,10,opt,name=targeting_key_selector,json=targetingKeySelector,proto3" json:"targeting_key_selector,omitempty"`
	Segment                string                                  `protobuf:"bytes,3,opt,name=segment,proto3" json:"segment,omitempty"`
	Variant                string                                  `protobuf:"bytes,4,opt,name=variant,proto3" json:"variant,omitempty"`
	Rule                   string                                  `protobuf:"bytes,5,opt,name=rule,proto3" json:"rule,omitempty"`
	Reason                 resolvertypes.ResolveReason             `protobuf:"varint,6,opt,name=reason,proto3,enum=confidence.flags.resolver.v1.ResolveReason" json:"reason,omitempty"`
	FallthroughAssignments []*resolverevents.FallthroughAssignment `protobuf:"bytes,9,rep,name=fallthrough_assignments,json=fallthroughAssignments,proto3" json:"fallthrough_assignments,omitempty"`
	AssignmentId           string                                  `protobuf:"bytes,8,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *ResolveTokenV1_AssignedFlag) Reset() {
	*x = ResolveTokenV1_AssignedFlag{}
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResolveTokenV1_AssignedFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolveTokenV1_AssignedFlag) ProtoMessage() {}

func (x *ResolveTokenV1_AssignedFlag) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolveTokenV1_AssignedFlag.ProtoReflect.Descriptor instead.
func (*ResolveTokenV1_AssignedFlag) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_internal_api_proto_rawDescGZIP(), []int{6, 1}
}

func (x *ResolveTokenV1_AssignedFlag) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *ResolveTokenV1_AssignedFlag) GetTargetingKey() string {
	if x != nil {
		return x.TargetingKey
	}
	return ""
}

func (x *ResolveTokenV1_AssignedFlag) GetTargetingKeySelector() string {
	if x != nil {
		return x.TargetingKeySelector
	}
	return ""
}

func (x *ResolveTokenV1_AssignedFlag) GetSegment() string {
	if x != nil {
		return x.Segment
	}
	return ""
}

func (x *ResolveTokenV1_AssignedFlag) GetVariant() string {
	if x != nil {
		return x.Variant
	}
	return ""
}

func (x *ResolveTokenV1_AssignedFlag) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *ResolveTokenV1_AssignedFlag) GetReason() resolvertypes.ResolveReason {
	if x != nil {
		return x.Reason
	}
	return resolvertypes.ResolveReason(0)
}

func (x *ResolveTokenV1_AssignedFlag) GetFallthroughAssignments() []*resolverevents.FallthroughAssignment {
	if x != nil {
		return x.FallthroughAssignments
	}
	return nil
}

func (x *ResolveTokenV1_AssignedFlag) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

var File_confidence_flags_resolver_v1_internal_api_proto protoreflect.FileDescriptor

const file_confidence_flags_resolver_v1_internal_api_proto_rawDesc = "" +
	"\n" +
	"/confidence/flags/resolver/v1/internal_api.proto\x12\x1cconfidence.flags.resolver.v1\x1a\x19google/api/resource.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1cgoogle/api/annotations.proto\x1a\x1fgoogle/api/field_behavior.proto\x1a\x1bgoogle/api/visibility.proto\x1a%confidence/flags/admin/v1/types.proto\x1a(confidence/flags/resolver/v1/types.proto\x1a0confidence/flags/resolver/v1/events/events.proto\x1a\x1dconfidence/auth/v1/auth.proto\x1a confidence/api/annotations.proto\x1a-confidence/flags/admin/v1/events/events.proto\"\x90\x03\n" +
	"\x14WriteFlagLogsRequest\x12\\\n" +
	"\rflag_assigned\x18\x01 \x03(\v21.confidence.flags.resolver.v1.events.FlagAssignedB\x04\xe2A\x01\x01R\fflagAssigned\x12X\n" +
	"\x0etelemetry_data\x18\x02 \x01(\v2+.confidence.flags.resolver.v1.TelemetryDataB\x04\xe2A\x01\x01R\rtelemetryData\x12b\n" +
	"\x13client_resolve_info\x18\x03 \x03(\v2,.confidence.flags.admin.v1.ClientResolveInfoB\x04\xe2A\x01\x01R\x11clientResolveInfo\x12\\\n" +
	"\x11flag_resolve_info\x18\x04 \x03(\v2*.confidence.flags.admin.v1.FlagResolveInfoB\x04\xe2A\x01\x01R\x0fflagResolveInfo\"\x17\n" +
	"\x15WriteFlagLogsResponse\"\xd2\x01\n" +
	"\x18WriteFlagAssignedRequest\x12\\\n" +
	"\rflag_assigned\x18\x01 \x03(\v21.confidence.flags.resolver.v1.events.FlagAssignedB\x04\xe2A\x01\x02R\fflagAssigned\x12X\n" +
	"\x0etelemetry_data\x18\x02 \x01(\v2+.confidence.flags.resolver.v1.TelemetryDataB\x04\xe2A\x01\x01R\rtelemetryData\"B\n" +
	"\x19WriteFlagAssignedResponse\x12%\n" +
	"\x0eassigned_flags\x18\x01 \x01(\x03R\rassignedFlags\"<\n" +
	"\rTelemetryData\x12+\n" +
	"\x0edropped_events\x18\x01 \x01(\x03B\x04\xe2A\x01\x02R\rdroppedEvents\"j\n" +
	"\fResolveToken\x12I\n" +
	"\btoken_v1\x18\x01 \x01(\v2,.confidence.flags.resolver.v1.ResolveTokenV1H\x00R\atokenV1B\x0f\n" +
	"\rresolve_token\"\x9a\a\n" +
	"\x0eResolveTokenV1\x12F\n" +
	"\x12evaluation_context\x18\x01 \x01(\v2\x17.google.protobuf.StructR\x11evaluationContext\x12_\n" +
	"\vassignments\x18\x02 \x03(\v2=.confidence.flags.resolver.v1.ResolveTokenV1.AssignmentsEntryR\vassignments\x12\x1d\n" +
	"\n" +
	"resolve_id\x18\x03 \x01(\tR\tresolveId\x12\x18\n" +
	"\aaccount\x18\x04 \x01(\tR\aaccount\x1ay\n" +
	"\x10AssignmentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12O\n" +
	"\x05value\x18\x02 \x01(\v29.confidence.flags.resolver.v1.ResolveTokenV1.AssignedFlagR\x05value:\x028\x01\x1a\xaa\x04\n" +
	"\fAssignedFlag\x122\n" +
	"\x04flag\x18\x01 \x01(\tB\x1e\xfaA\x1b\n" +
	"\x19flags.confidence.dev/FlagR\x04flag\x12#\n" +
	"\rtargeting_key\x18\x02 \x01(\tR\ftargetingKey\x124\n" +
	"\x16targeting_key_selector\x18\n" +
	" \x01(\tR\x14targetingKeySelector\x12;\n" +
	"\asegment\x18\x03 \x01(\tB!\xfaA\x1e\n" +
	"\x1cflags.confidence.dev/SegmentR\asegment\x12;\n" +
	"\avariant\x18\x04 \x01(\tB!\xfaA\x1e\n" +
	"\x1cflags.confidence.dev/VariantR\avariant\x122\n" +
	"\x04rule\x18\x05 \x01(\tB\x1e\xfaA\x1b\n" +
	"\x19flags.confidence.dev/RuleR\x04rule\x12C\n" +
	"\x06reason\x18\x06 \x01(\x0e2+.confidence.flags.resolver.v1.ResolveReasonR\x06reason\x12s\n" +
	"\x17fallthrough_assignments\x18\t \x03(\v2:.confidence.flags.resolver.v1.events.FallthroughAssignmentR\x16fallthroughAssignments\x12#\n" +
	"\rassignment_id\x18\b \x01(\tR\fassignmentId2\xce\x04\n" +
	"\x19InternalFlagLoggerService\x12\x82\x02\n" +
	"\x11WriteFlagAssigned\x126.confidence.flags.resolver.v1.WriteFlagAssignedRequest\x1a7.confidence.flags.resolver.v1.WriteFlagAssignedResponse\"|ʇ\xe4\x10(\n" +
	"\x02\xf2\x02\"\aaccount*\x17can_write_flag_assigned0\x01\x82\xd3\xe4\x93\x02I:\x01*Z,:\rflag_assigned\"\x1b/v1/flagAssigned:writeArray\"\x16/v1/flagAssigned:write\x12\xc4\x01\n" +
	"\rWriteFlagLogs\x122.confidence.flags.resolver.v1.WriteFlagLogsRequest\x1a3.confidence.flags.resolver.v1.WriteFlagLogsResponse\"Jʇ\xe4\x10(\n" +
	"\x02\xf2\x02\"\aaccount*\x17can_write_flag_assigned0\x01\x82\xd3\xe4\x93\x02\x17:\x01*\"\x12/v1/flagLogs:write\x1ae\xe2\x87\xe4\x10\x1aresolver.eu.confidence.dev\xe2\x87\xe4\x10\x1aresolver.us.confidence.dev\xea\x87\xe4\x10\x12InternalFlagLogger\xfa\xd2\xe4\x93\x02\n" +
	"\x12\bINTERNALB>\n" +
	"(com.spotify.confidence.flags.resolver.v1B\x10InternalApiProtoP\x01b\x06proto3"

var (
	file_confidence_flags_resolver_v1_internal_api_proto_rawDescOnce sync.Once
	file_confidence_flags_resolver_v1_internal_api_proto_rawDescData []byte
)

func file_confidence_flags_resolver_v1_internal_api_proto_rawDescGZIP() []byte {
	file_confidence_flags_resolver_v1_internal_api_proto_rawDescOnce.Do(func() {
		file_confidence_flags_resolver_v1_internal_api_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_confidence_flags_resolver_v1_internal_api_proto_rawDesc), len(file_confidence_flags_resolver_v1_internal_api_proto_rawDesc)))
	})
	return file_confidence_flags_resolver_v1_internal_api_proto_rawDescData
}

var file_confidence_flags_resolver_v1_internal_api_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_confidence_flags_resolver_v1_internal_api_proto_goTypes = []any{
	(*WriteFlagLogsRequest)(nil),                 // 0: confidence.flags.resolver.v1.WriteFlagLogsRequest
	(*WriteFlagLogsResponse)(nil),                // 1: confidence.flags.resolver.v1.WriteFlagLogsResponse
	(*WriteFlagAssignedRequest)(nil),             // 2: confidence.flags.resolver.v1.WriteFlagAssignedRequest
	(*WriteFlagAssignedResponse)(nil),            // 3: confidence.flags.resolver.v1.WriteFlagAssignedResponse
	(*TelemetryData)(nil),                        // 4: confidence.flags.resolver.v1.TelemetryData
	(*ResolveToken)(nil),                         // 5: confidence.flags.resolver.v1.ResolveToken
	(*ResolveTokenV1)(nil),                       // 6: confidence.flags.resolver.v1.ResolveTokenV1
	nil,                                          // 7: confidence.flags.resolver.v1.ResolveTokenV1.AssignmentsEntry
	(*ResolveTokenV1_AssignedFlag)(nil),          // 8: confidence.flags.resolver.v1.ResolveTokenV1.AssignedFlag
	(*resolverevents.FlagAssigned)(nil),          // 9: confidence.flags.resolver.v1.events.FlagAssigned
	(*v1.ClientResolveInfo)(nil),                 // 10: confidence.flags.admin.v1.ClientResolveInfo
	(*v1.FlagResolveInfo)(nil),                   // 11: confidence.flags.admin.v1.FlagResolveInfo
	(*structpb.Struct)(nil),                      // 12: google.protobuf.Struct
	(resolvertypes.ResolveReason)(0),             // 13: confidence.flags.resolver.v1.ResolveReason
	(*resolverevents.FallthroughAssignment)(nil), // 14: confidence.flags.resolver.v1.events.FallthroughAssignment
}
var file_confidence_flags_resolver_v1_internal_api_proto_depIdxs = []int32{
	9,  // 0: confidence.flags.resolver.v1.WriteFlagLogsRequest.flag_assigned:type_name -> confidence.flags.resolver.v1.events.FlagAssigned
	4,  // 1: confidence.flags.resolver.v1.WriteFlagLogsRequest.telemetry_data:type_name -> confidence.flags.resolver.v1.TelemetryData
	10, // 2: confidence.flags.resolver.v1.WriteFlagLogsRequest.client_resolve_info:type_name -> confidence.flags.admin.v1.ClientResolveInfo
	11, // 3: confidence.flags.resolver.v1.WriteFlagLogsRequest.flag_resolve_info:type_name -> confidence.flags.admin.v1.FlagResolveInfo
	9,  // 4: confidence.flags.resolver.v1.WriteFlagAssignedRequest.flag_assigned:type_name -> confidence.flags.resolver.v1.events.FlagAssigned
	4,  // 5: confidence.flags.resolver.v1.WriteFlagAssignedRequest.telemetry_data:type_name -> confidence.flags.resolver.v1.TelemetryData
	6,  // 6: confidence.flags.resolver.v1.ResolveToken.token_v1:type_name -> confidence.flags.resolver.v1.ResolveTokenV1
	12, // 7: confidence.flags.resolver.v1.ResolveTokenV1.evaluation_context:type_name -> google.protobuf.Struct
	7,  // 8: confidence.flags.resolver.v1.ResolveTokenV1.assignments:type_name -> confidence.flags.resolver.v1.ResolveTokenV1.AssignmentsEntry
	8,  // 9: confidence.flags.resolver.v1.ResolveTokenV1.AssignmentsEntry.value:type_name -> confidence.flags.resolver.v1.ResolveTokenV1.AssignedFlag
	13, // 10: confidence.flags.resolver.v1.ResolveTokenV1.AssignedFlag.reason:type_name -> confidence.flags.resolver.v1.ResolveReason
	14, // 11: confidence.flags.resolver.v1.ResolveTokenV1.AssignedFlag.fallthrough_assignments:type_name -> confidence.flags.resolver.v1.events.FallthroughAssignment
	2,  // 12: confidence.flags.resolver.v1.InternalFlagLoggerService.WriteFlagAssigned:input_type -> confidence.flags.resolver.v1.WriteFlagAssignedRequest
	0,  // 13: confidence.flags.resolver.v1.InternalFlagLoggerService.WriteFlagLogs:input_type -> confidence.flags.resolver.v1.WriteFlagLogsRequest
	3,  // 14: confidence.flags.resolver.v1.InternalFlagLoggerService.WriteFlagAssigned:output_type -> confidence.flags.resolver.v1.WriteFlagAssignedResponse
	1,  // 15: confidence.flags.resolver.v1.InternalFlagLoggerService.WriteFlagLogs:output_type -> confidence.flags.resolver.v1.WriteFlagLogsResponse
	14, // [14:16] is the sub-list for method output_type
	12, // [12:14] is the sub-list for method input_type
	12, // [12:12] is the sub-list for extension type_name
	12, // [12:12] is the sub-list for extension extendee
	0,  // [0:12] is the sub-list for field type_name
}

func init() { file_confidence_flags_resolver_v1_internal_api_proto_init() }
func file_confidence_flags_resolver_v1_internal_api_proto_init() {
	if File_confidence_flags_resolver_v1_internal_api_proto != nil {
		return
	}
	file_confidence_flags_resolver_v1_internal_api_proto_msgTypes[5].OneofWrappers = []any{
		(*ResolveToken_TokenV1)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_confidence_flags_resolver_v1_internal_api_proto_rawDesc), len(file_confidence_flags_resolver_v1_internal_api_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_confidence_flags_resolver_v1_internal_api_proto_goTypes,
		DependencyIndexes: file_confidence_flags_resolver_v1_internal_api_proto_depIdxs,
		MessageInfos:      file_confidence_flags_resolver_v1_internal_api_proto_msgTypes,
	}.Build()
	File_confidence_flags_resolver_v1_internal_api_proto = out.File
	file_confidence_flags_resolver_v1_internal_api_proto_goTypes = nil
	file_confidence_flags_resolver_v1_internal_api_proto_depIdxs = nil
}

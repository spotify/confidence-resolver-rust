// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: confidence/flags/types/v1/types.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Schema for the value of a flag.
//
// The value of a flag is always a struct with one or more nested fields.
// Example of a struct schema with two fields, `color` (a string) and `len` (an int):
//
// ```
//
//	{
//	  "schema": {
//	    "color": {
//	      "stringSchema": {}
//	    },
//	    "len": {
//	      "intSchema": {}
//	    }
//	  }
//	}
//
// ```
type FlagSchema struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to SchemaType:
	//
	//	*FlagSchema_StructSchema
	//	*FlagSchema_ListSchema
	//	*FlagSchema_IntSchema
	//	*FlagSchema_DoubleSchema
	//	*FlagSchema_StringSchema
	//	*FlagSchema_BoolSchema
	SchemaType    isFlagSchema_SchemaType `protobuf_oneof:"schema_type"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagSchema) Reset() {
	*x = FlagSchema{}
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagSchema) ProtoMessage() {}

func (x *FlagSchema) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagSchema.ProtoReflect.Descriptor instead.
func (*FlagSchema) Descriptor() ([]byte, []int) {
	return file_confidence_flags_types_v1_types_proto_rawDescGZIP(), []int{0}
}

func (x *FlagSchema) GetSchemaType() isFlagSchema_SchemaType {
	if x != nil {
		return x.SchemaType
	}
	return nil
}

func (x *FlagSchema) GetStructSchema() *FlagSchema_StructFlagSchema {
	if x != nil {
		if x, ok := x.SchemaType.(*FlagSchema_StructSchema); ok {
			return x.StructSchema
		}
	}
	return nil
}

func (x *FlagSchema) GetListSchema() *FlagSchema_ListFlagSchema {
	if x != nil {
		if x, ok := x.SchemaType.(*FlagSchema_ListSchema); ok {
			return x.ListSchema
		}
	}
	return nil
}

func (x *FlagSchema) GetIntSchema() *FlagSchema_IntFlagSchema {
	if x != nil {
		if x, ok := x.SchemaType.(*FlagSchema_IntSchema); ok {
			return x.IntSchema
		}
	}
	return nil
}

func (x *FlagSchema) GetDoubleSchema() *FlagSchema_DoubleFlagSchema {
	if x != nil {
		if x, ok := x.SchemaType.(*FlagSchema_DoubleSchema); ok {
			return x.DoubleSchema
		}
	}
	return nil
}

func (x *FlagSchema) GetStringSchema() *FlagSchema_StringFlagSchema {
	if x != nil {
		if x, ok := x.SchemaType.(*FlagSchema_StringSchema); ok {
			return x.StringSchema
		}
	}
	return nil
}

func (x *FlagSchema) GetBoolSchema() *FlagSchema_BoolFlagSchema {
	if x != nil {
		if x, ok := x.SchemaType.(*FlagSchema_BoolSchema); ok {
			return x.BoolSchema
		}
	}
	return nil
}

type isFlagSchema_SchemaType interface {
	isFlagSchema_SchemaType()
}

type FlagSchema_StructSchema struct {
	// Schema if this is a struct
	StructSchema *FlagSchema_StructFlagSchema `protobuf:"bytes,1,opt,name=struct_schema,json=structSchema,proto3,oneof"`
}

type FlagSchema_ListSchema struct {
	// Schema if this is a list
	ListSchema *FlagSchema_ListFlagSchema `protobuf:"bytes,2,opt,name=list_schema,json=listSchema,proto3,oneof"`
}

type FlagSchema_IntSchema struct {
	// Schema if this is an int
	IntSchema *FlagSchema_IntFlagSchema `protobuf:"bytes,3,opt,name=int_schema,json=intSchema,proto3,oneof"`
}

type FlagSchema_DoubleSchema struct {
	// Schema if this is a double
	DoubleSchema *FlagSchema_DoubleFlagSchema `protobuf:"bytes,4,opt,name=double_schema,json=doubleSchema,proto3,oneof"`
}

type FlagSchema_StringSchema struct {
	// Schema if this is a string
	StringSchema *FlagSchema_StringFlagSchema `protobuf:"bytes,5,opt,name=string_schema,json=stringSchema,proto3,oneof"`
}

type FlagSchema_BoolSchema struct {
	// Schema if this is a bool
	BoolSchema *FlagSchema_BoolFlagSchema `protobuf:"bytes,6,opt,name=bool_schema,json=boolSchema,proto3,oneof"`
}

func (*FlagSchema_StructSchema) isFlagSchema_SchemaType() {}

func (*FlagSchema_ListSchema) isFlagSchema_SchemaType() {}

func (*FlagSchema_IntSchema) isFlagSchema_SchemaType() {}

func (*FlagSchema_DoubleSchema) isFlagSchema_SchemaType() {}

func (*FlagSchema_StringSchema) isFlagSchema_SchemaType() {}

func (*FlagSchema_BoolSchema) isFlagSchema_SchemaType() {}

// A schema of nested fields. The length of the field name is limited to
// 32 characters and can only contain alphanumeric characters, hyphens and
// underscores. The number of fields in a struct is limited to 64.
// Structs can not be nested more than four (4) levels.
type FlagSchema_StructFlagSchema struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Map of field name to the schema for the field
	Schema        map[string]*FlagSchema `protobuf:"bytes,1,rep,name=schema,proto3" json:"schema,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagSchema_StructFlagSchema) Reset() {
	*x = FlagSchema_StructFlagSchema{}
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagSchema_StructFlagSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagSchema_StructFlagSchema) ProtoMessage() {}

func (x *FlagSchema_StructFlagSchema) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagSchema_StructFlagSchema.ProtoReflect.Descriptor instead.
func (*FlagSchema_StructFlagSchema) Descriptor() ([]byte, []int) {
	return file_confidence_flags_types_v1_types_proto_rawDescGZIP(), []int{0, 0}
}

func (x *FlagSchema_StructFlagSchema) GetSchema() map[string]*FlagSchema {
	if x != nil {
		return x.Schema
	}
	return nil
}

// A number that has a decimal place.
type FlagSchema_DoubleFlagSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagSchema_DoubleFlagSchema) Reset() {
	*x = FlagSchema_DoubleFlagSchema{}
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagSchema_DoubleFlagSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagSchema_DoubleFlagSchema) ProtoMessage() {}

func (x *FlagSchema_DoubleFlagSchema) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagSchema_DoubleFlagSchema.ProtoReflect.Descriptor instead.
func (*FlagSchema_DoubleFlagSchema) Descriptor() ([]byte, []int) {
	return file_confidence_flags_types_v1_types_proto_rawDescGZIP(), []int{0, 1}
}

// A whole number without a decimal point.
type FlagSchema_IntFlagSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagSchema_IntFlagSchema) Reset() {
	*x = FlagSchema_IntFlagSchema{}
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagSchema_IntFlagSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagSchema_IntFlagSchema) ProtoMessage() {}

func (x *FlagSchema_IntFlagSchema) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagSchema_IntFlagSchema.ProtoReflect.Descriptor instead.
func (*FlagSchema_IntFlagSchema) Descriptor() ([]byte, []int) {
	return file_confidence_flags_types_v1_types_proto_rawDescGZIP(), []int{0, 2}
}

// A string. The length is limited to 250 characters.
type FlagSchema_StringFlagSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagSchema_StringFlagSchema) Reset() {
	*x = FlagSchema_StringFlagSchema{}
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagSchema_StringFlagSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagSchema_StringFlagSchema) ProtoMessage() {}

func (x *FlagSchema_StringFlagSchema) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagSchema_StringFlagSchema.ProtoReflect.Descriptor instead.
func (*FlagSchema_StringFlagSchema) Descriptor() ([]byte, []int) {
	return file_confidence_flags_types_v1_types_proto_rawDescGZIP(), []int{0, 3}
}

// A boolean: true or false.
type FlagSchema_BoolFlagSchema struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagSchema_BoolFlagSchema) Reset() {
	*x = FlagSchema_BoolFlagSchema{}
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagSchema_BoolFlagSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagSchema_BoolFlagSchema) ProtoMessage() {}

func (x *FlagSchema_BoolFlagSchema) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagSchema_BoolFlagSchema.ProtoReflect.Descriptor instead.
func (*FlagSchema_BoolFlagSchema) Descriptor() ([]byte, []int) {
	return file_confidence_flags_types_v1_types_proto_rawDescGZIP(), []int{0, 4}
}

// A list of values. The values have the same data types which
// is defined by  `element_schema`.
type FlagSchema_ListFlagSchema struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The schema for the elements in the list
	ElementSchema *FlagSchema `protobuf:"bytes,1,opt,name=element_schema,json=elementSchema,proto3" json:"element_schema,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagSchema_ListFlagSchema) Reset() {
	*x = FlagSchema_ListFlagSchema{}
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagSchema_ListFlagSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagSchema_ListFlagSchema) ProtoMessage() {}

func (x *FlagSchema_ListFlagSchema) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_types_v1_types_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagSchema_ListFlagSchema.ProtoReflect.Descriptor instead.
func (*FlagSchema_ListFlagSchema) Descriptor() ([]byte, []int) {
	return file_confidence_flags_types_v1_types_proto_rawDescGZIP(), []int{0, 5}
}

func (x *FlagSchema_ListFlagSchema) GetElementSchema() *FlagSchema {
	if x != nil {
		return x.ElementSchema
	}
	return nil
}

var File_confidence_flags_types_v1_types_proto protoreflect.FileDescriptor

const file_confidence_flags_types_v1_types_proto_rawDesc = "" +
	"\n" +
	"%confidence/flags/types/v1/types.proto\x12\x19confidence.flags.types.v1\"\xbe\a\n" +
	"\n" +
	"FlagSchema\x12]\n" +
	"\rstruct_schema\x18\x01 \x01(\v26.confidence.flags.types.v1.FlagSchema.StructFlagSchemaH\x00R\fstructSchema\x12W\n" +
	"\vlist_schema\x18\x02 \x01(\v24.confidence.flags.types.v1.FlagSchema.ListFlagSchemaH\x00R\n" +
	"listSchema\x12T\n" +
	"\n" +
	"int_schema\x18\x03 \x01(\v23.confidence.flags.types.v1.FlagSchema.IntFlagSchemaH\x00R\tintSchema\x12]\n" +
	"\rdouble_schema\x18\x04 \x01(\v26.confidence.flags.types.v1.FlagSchema.DoubleFlagSchemaH\x00R\fdoubleSchema\x12]\n" +
	"\rstring_schema\x18\x05 \x01(\v26.confidence.flags.types.v1.FlagSchema.StringFlagSchemaH\x00R\fstringSchema\x12W\n" +
	"\vbool_schema\x18\x06 \x01(\v24.confidence.flags.types.v1.FlagSchema.BoolFlagSchemaH\x00R\n" +
	"boolSchema\x1a\xd0\x01\n" +
	"\x10StructFlagSchema\x12Z\n" +
	"\x06schema\x18\x01 \x03(\v2B.confidence.flags.types.v1.FlagSchema.StructFlagSchema.SchemaEntryR\x06schema\x1a`\n" +
	"\vSchemaEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12;\n" +
	"\x05value\x18\x02 \x01(\v2%.confidence.flags.types.v1.FlagSchemaR\x05value:\x028\x01\x1a\x12\n" +
	"\x10DoubleFlagSchema\x1a\x0f\n" +
	"\rIntFlagSchema\x1a\x12\n" +
	"\x10StringFlagSchema\x1a\x10\n" +
	"\x0eBoolFlagSchema\x1a^\n" +
	"\x0eListFlagSchema\x12L\n" +
	"\x0eelement_schema\x18\x01 \x01(\v2%.confidence.flags.types.v1.FlagSchemaR\relementSchemaB\r\n" +
	"\vschema_typeB5\n" +
	"%com.spotify.confidence.flags.types.v1B\n" +
	"TypesProtoP\x01b\x06proto3"

var (
	file_confidence_flags_types_v1_types_proto_rawDescOnce sync.Once
	file_confidence_flags_types_v1_types_proto_rawDescData []byte
)

func file_confidence_flags_types_v1_types_proto_rawDescGZIP() []byte {
	file_confidence_flags_types_v1_types_proto_rawDescOnce.Do(func() {
		file_confidence_flags_types_v1_types_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_confidence_flags_types_v1_types_proto_rawDesc), len(file_confidence_flags_types_v1_types_proto_rawDesc)))
	})
	return file_confidence_flags_types_v1_types_proto_rawDescData
}

var file_confidence_flags_types_v1_types_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_confidence_flags_types_v1_types_proto_goTypes = []any{
	(*FlagSchema)(nil),                  // 0: confidence.flags.types.v1.FlagSchema
	(*FlagSchema_StructFlagSchema)(nil), // 1: confidence.flags.types.v1.FlagSchema.StructFlagSchema
	(*FlagSchema_DoubleFlagSchema)(nil), // 2: confidence.flags.types.v1.FlagSchema.DoubleFlagSchema
	(*FlagSchema_IntFlagSchema)(nil),    // 3: confidence.flags.types.v1.FlagSchema.IntFlagSchema
	(*FlagSchema_StringFlagSchema)(nil), // 4: confidence.flags.types.v1.FlagSchema.StringFlagSchema
	(*FlagSchema_BoolFlagSchema)(nil),   // 5: confidence.flags.types.v1.FlagSchema.BoolFlagSchema
	(*FlagSchema_ListFlagSchema)(nil),   // 6: confidence.flags.types.v1.FlagSchema.ListFlagSchema
	nil,                                 // 7: confidence.flags.types.v1.FlagSchema.StructFlagSchema.SchemaEntry
}
var file_confidence_flags_types_v1_types_proto_depIdxs = []int32{
	1, // 0: confidence.flags.types.v1.FlagSchema.struct_schema:type_name -> confidence.flags.types.v1.FlagSchema.StructFlagSchema
	6, // 1: confidence.flags.types.v1.FlagSchema.list_schema:type_name -> confidence.flags.types.v1.FlagSchema.ListFlagSchema
	3, // 2: confidence.flags.types.v1.FlagSchema.int_schema:type_name -> confidence.flags.types.v1.FlagSchema.IntFlagSchema
	2, // 3: confidence.flags.types.v1.FlagSchema.double_schema:type_name -> confidence.flags.types.v1.FlagSchema.DoubleFlagSchema
	4, // 4: confidence.flags.types.v1.FlagSchema.string_schema:type_name -> confidence.flags.types.v1.FlagSchema.StringFlagSchema
	5, // 5: confidence.flags.types.v1.FlagSchema.bool_schema:type_name -> confidence.flags.types.v1.FlagSchema.BoolFlagSchema
	7, // 6: confidence.flags.types.v1.FlagSchema.StructFlagSchema.schema:type_name -> confidence.flags.types.v1.FlagSchema.StructFlagSchema.SchemaEntry
	0, // 7: confidence.flags.types.v1.FlagSchema.ListFlagSchema.element_schema:type_name -> confidence.flags.types.v1.FlagSchema
	0, // 8: confidence.flags.types.v1.FlagSchema.StructFlagSchema.SchemaEntry.value:type_name -> confidence.flags.types.v1.FlagSchema
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_confidence_flags_types_v1_types_proto_init() }
func file_confidence_flags_types_v1_types_proto_init() {
	if File_confidence_flags_types_v1_types_proto != nil {
		return
	}
	file_confidence_flags_types_v1_types_proto_msgTypes[0].OneofWrappers = []any{
		(*FlagSchema_StructSchema)(nil),
		(*FlagSchema_ListSchema)(nil),
		(*FlagSchema_IntSchema)(nil),
		(*FlagSchema_DoubleSchema)(nil),
		(*FlagSchema_StringSchema)(nil),
		(*FlagSchema_BoolSchema)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_confidence_flags_types_v1_types_proto_rawDesc), len(file_confidence_flags_types_v1_types_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_confidence_flags_types_v1_types_proto_goTypes,
		DependencyIndexes: file_confidence_flags_types_v1_types_proto_depIdxs,
		MessageInfos:      file_confidence_flags_types_v1_types_proto_msgTypes,
	}.Build()
	File_confidence_flags_types_v1_types_proto = out.File
	file_confidence_flags_types_v1_types_proto_goTypes = nil
	file_confidence_flags_types_v1_types_proto_depIdxs = nil
}

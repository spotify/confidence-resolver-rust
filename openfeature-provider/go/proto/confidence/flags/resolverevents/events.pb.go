// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v5.29.3
// source: confidence/flags/resolver/v1/events/events.proto

package resolverevents

import (
	_ "github.com/spotify/confidence-resolver-rust/openfeature-provider/go/confidence/proto/confidence/events/v1"
	resolvertypes "github.com/spotify/confidence-resolver-rust/openfeature-provider/go/confidence/proto/confidence/flags/resolvertypes"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	_ "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FlagAssigned_DefaultAssignment_DefaultAssignmentReason int32

const (
	FlagAssigned_DefaultAssignment_DEFAULT_ASSIGNMENT_REASON_UNSPECIFIED FlagAssigned_DefaultAssignment_DefaultAssignmentReason = 0
	FlagAssigned_DefaultAssignment_NO_SEGMENT_MATCH                      FlagAssigned_DefaultAssignment_DefaultAssignmentReason = 1
	// Deprecated: Marked as deprecated in confidence/flags/resolver/v1/events/events.proto.
	FlagAssigned_DefaultAssignment_NO_TREATMENT_MATCH FlagAssigned_DefaultAssignment_DefaultAssignmentReason = 2
	FlagAssigned_DefaultAssignment_FLAG_ARCHIVED      FlagAssigned_DefaultAssignment_DefaultAssignmentReason = 3
)

// Enum value maps for FlagAssigned_DefaultAssignment_DefaultAssignmentReason.
var (
	FlagAssigned_DefaultAssignment_DefaultAssignmentReason_name = map[int32]string{
		0: "DEFAULT_ASSIGNMENT_REASON_UNSPECIFIED",
		1: "NO_SEGMENT_MATCH",
		2: "NO_TREATMENT_MATCH",
		3: "FLAG_ARCHIVED",
	}
	FlagAssigned_DefaultAssignment_DefaultAssignmentReason_value = map[string]int32{
		"DEFAULT_ASSIGNMENT_REASON_UNSPECIFIED": 0,
		"NO_SEGMENT_MATCH":                      1,
		"NO_TREATMENT_MATCH":                    2,
		"FLAG_ARCHIVED":                         3,
	}
)

func (x FlagAssigned_DefaultAssignment_DefaultAssignmentReason) Enum() *FlagAssigned_DefaultAssignment_DefaultAssignmentReason {
	p := new(FlagAssigned_DefaultAssignment_DefaultAssignmentReason)
	*p = x
	return p
}

func (x FlagAssigned_DefaultAssignment_DefaultAssignmentReason) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FlagAssigned_DefaultAssignment_DefaultAssignmentReason) Descriptor() protoreflect.EnumDescriptor {
	return file_confidence_flags_resolver_v1_events_events_proto_enumTypes[0].Descriptor()
}

func (FlagAssigned_DefaultAssignment_DefaultAssignmentReason) Type() protoreflect.EnumType {
	return &file_confidence_flags_resolver_v1_events_events_proto_enumTypes[0]
}

func (x FlagAssigned_DefaultAssignment_DefaultAssignmentReason) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FlagAssigned_DefaultAssignment_DefaultAssignmentReason.Descriptor instead.
func (FlagAssigned_DefaultAssignment_DefaultAssignmentReason) EnumDescriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_events_events_proto_rawDescGZIP(), []int{1, 2, 0}
}

type ClientInfo struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Client           string                 `protobuf:"bytes,1,opt,name=client,proto3" json:"client,omitempty"`
	ClientCredential string                 `protobuf:"bytes,2,opt,name=client_credential,json=clientCredential,proto3" json:"client_credential,omitempty"` //TODO: client version
	// Information about the SDK used to interact with the API.
	Sdk           *resolvertypes.Sdk `protobuf:"bytes,3,opt,name=sdk,proto3" json:"sdk,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClientInfo) Reset() {
	*x = ClientInfo{}
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClientInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientInfo) ProtoMessage() {}

func (x *ClientInfo) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientInfo.ProtoReflect.Descriptor instead.
func (*ClientInfo) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_events_events_proto_rawDescGZIP(), []int{0}
}

func (x *ClientInfo) GetClient() string {
	if x != nil {
		return x.Client
	}
	return ""
}

func (x *ClientInfo) GetClientCredential() string {
	if x != nil {
		return x.ClientCredential
	}
	return ""
}

func (x *ClientInfo) GetSdk() *resolvertypes.Sdk {
	if x != nil {
		return x.Sdk
	}
	return nil
}

type FlagAssigned struct {
	state         protoimpl.MessageState      `protogen:"open.v1"`
	ResolveId     string                      `protobuf:"bytes,10,opt,name=resolve_id,json=resolveId,proto3" json:"resolve_id,omitempty"`
	ClientInfo    *ClientInfo                 `protobuf:"bytes,3,opt,name=client_info,json=clientInfo,proto3" json:"client_info,omitempty"`
	Flags         []*FlagAssigned_AppliedFlag `protobuf:"bytes,15,rep,name=flags,proto3" json:"flags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagAssigned) Reset() {
	*x = FlagAssigned{}
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagAssigned) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagAssigned) ProtoMessage() {}

func (x *FlagAssigned) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagAssigned.ProtoReflect.Descriptor instead.
func (*FlagAssigned) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_events_events_proto_rawDescGZIP(), []int{1}
}

func (x *FlagAssigned) GetResolveId() string {
	if x != nil {
		return x.ResolveId
	}
	return ""
}

func (x *FlagAssigned) GetClientInfo() *ClientInfo {
	if x != nil {
		return x.ClientInfo
	}
	return nil
}

func (x *FlagAssigned) GetFlags() []*FlagAssigned_AppliedFlag {
	if x != nil {
		return x.Flags
	}
	return nil
}

type FallthroughAssignment struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Rule                 string                 `protobuf:"bytes,1,opt,name=rule,proto3" json:"rule,omitempty"`
	AssignmentId         string                 `protobuf:"bytes,2,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	TargetingKey         string                 `protobuf:"bytes,3,opt,name=targeting_key,json=targetingKey,proto3" json:"targeting_key,omitempty"`
	TargetingKeySelector string                 `protobuf:"bytes,4,opt,name=targeting_key_selector,json=targetingKeySelector,proto3" json:"targeting_key_selector,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *FallthroughAssignment) Reset() {
	*x = FallthroughAssignment{}
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FallthroughAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FallthroughAssignment) ProtoMessage() {}

func (x *FallthroughAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FallthroughAssignment.ProtoReflect.Descriptor instead.
func (*FallthroughAssignment) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_events_events_proto_rawDescGZIP(), []int{2}
}

func (x *FallthroughAssignment) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *FallthroughAssignment) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *FallthroughAssignment) GetTargetingKey() string {
	if x != nil {
		return x.TargetingKey
	}
	return ""
}

func (x *FallthroughAssignment) GetTargetingKeySelector() string {
	if x != nil {
		return x.TargetingKeySelector
	}
	return ""
}

type FlagAssigned_AppliedFlag struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Flag                 string                 `protobuf:"bytes,1,opt,name=flag,proto3" json:"flag,omitempty"`
	TargetingKey         string                 `protobuf:"bytes,2,opt,name=targeting_key,json=targetingKey,proto3" json:"targeting_key,omitempty"`
	TargetingKeySelector string                 `protobuf:"bytes,3,opt,name=targeting_key_selector,json=targetingKeySelector,proto3" json:"targeting_key_selector,omitempty"`
	// Types that are valid to be assigned to Assignment:
	//
	//	*FlagAssigned_AppliedFlag_AssignmentInfo
	//	*FlagAssigned_AppliedFlag_DefaultAssignment
	Assignment             isFlagAssigned_AppliedFlag_Assignment `protobuf_oneof:"assignment"`
	AssignmentId           string                                `protobuf:"bytes,6,opt,name=assignment_id,json=assignmentId,proto3" json:"assignment_id,omitempty"`
	Rule                   string                                `protobuf:"bytes,7,opt,name=rule,proto3" json:"rule,omitempty"`
	FallthroughAssignments []*FallthroughAssignment              `protobuf:"bytes,8,rep,name=fallthrough_assignments,json=fallthroughAssignments,proto3" json:"fallthrough_assignments,omitempty"`
	ApplyTime              *timestamppb.Timestamp                `protobuf:"bytes,9,opt,name=apply_time,json=applyTime,proto3" json:"apply_time,omitempty"`
	unknownFields          protoimpl.UnknownFields
	sizeCache              protoimpl.SizeCache
}

func (x *FlagAssigned_AppliedFlag) Reset() {
	*x = FlagAssigned_AppliedFlag{}
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagAssigned_AppliedFlag) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagAssigned_AppliedFlag) ProtoMessage() {}

func (x *FlagAssigned_AppliedFlag) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagAssigned_AppliedFlag.ProtoReflect.Descriptor instead.
func (*FlagAssigned_AppliedFlag) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_events_events_proto_rawDescGZIP(), []int{1, 0}
}

func (x *FlagAssigned_AppliedFlag) GetFlag() string {
	if x != nil {
		return x.Flag
	}
	return ""
}

func (x *FlagAssigned_AppliedFlag) GetTargetingKey() string {
	if x != nil {
		return x.TargetingKey
	}
	return ""
}

func (x *FlagAssigned_AppliedFlag) GetTargetingKeySelector() string {
	if x != nil {
		return x.TargetingKeySelector
	}
	return ""
}

func (x *FlagAssigned_AppliedFlag) GetAssignment() isFlagAssigned_AppliedFlag_Assignment {
	if x != nil {
		return x.Assignment
	}
	return nil
}

func (x *FlagAssigned_AppliedFlag) GetAssignmentInfo() *FlagAssigned_AssignmentInfo {
	if x != nil {
		if x, ok := x.Assignment.(*FlagAssigned_AppliedFlag_AssignmentInfo); ok {
			return x.AssignmentInfo
		}
	}
	return nil
}

func (x *FlagAssigned_AppliedFlag) GetDefaultAssignment() *FlagAssigned_DefaultAssignment {
	if x != nil {
		if x, ok := x.Assignment.(*FlagAssigned_AppliedFlag_DefaultAssignment); ok {
			return x.DefaultAssignment
		}
	}
	return nil
}

func (x *FlagAssigned_AppliedFlag) GetAssignmentId() string {
	if x != nil {
		return x.AssignmentId
	}
	return ""
}

func (x *FlagAssigned_AppliedFlag) GetRule() string {
	if x != nil {
		return x.Rule
	}
	return ""
}

func (x *FlagAssigned_AppliedFlag) GetFallthroughAssignments() []*FallthroughAssignment {
	if x != nil {
		return x.FallthroughAssignments
	}
	return nil
}

func (x *FlagAssigned_AppliedFlag) GetApplyTime() *timestamppb.Timestamp {
	if x != nil {
		return x.ApplyTime
	}
	return nil
}

type isFlagAssigned_AppliedFlag_Assignment interface {
	isFlagAssigned_AppliedFlag_Assignment()
}

type FlagAssigned_AppliedFlag_AssignmentInfo struct {
	AssignmentInfo *FlagAssigned_AssignmentInfo `protobuf:"bytes,4,opt,name=assignment_info,json=assignmentInfo,proto3,oneof"`
}

type FlagAssigned_AppliedFlag_DefaultAssignment struct {
	DefaultAssignment *FlagAssigned_DefaultAssignment `protobuf:"bytes,5,opt,name=default_assignment,json=defaultAssignment,proto3,oneof"`
}

func (*FlagAssigned_AppliedFlag_AssignmentInfo) isFlagAssigned_AppliedFlag_Assignment() {}

func (*FlagAssigned_AppliedFlag_DefaultAssignment) isFlagAssigned_AppliedFlag_Assignment() {}

type FlagAssigned_AssignmentInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Segment       string                 `protobuf:"bytes,1,opt,name=segment,proto3" json:"segment,omitempty"`
	Variant       string                 `protobuf:"bytes,2,opt,name=variant,proto3" json:"variant,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagAssigned_AssignmentInfo) Reset() {
	*x = FlagAssigned_AssignmentInfo{}
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagAssigned_AssignmentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagAssigned_AssignmentInfo) ProtoMessage() {}

func (x *FlagAssigned_AssignmentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagAssigned_AssignmentInfo.ProtoReflect.Descriptor instead.
func (*FlagAssigned_AssignmentInfo) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_events_events_proto_rawDescGZIP(), []int{1, 1}
}

func (x *FlagAssigned_AssignmentInfo) GetSegment() string {
	if x != nil {
		return x.Segment
	}
	return ""
}

func (x *FlagAssigned_AssignmentInfo) GetVariant() string {
	if x != nil {
		return x.Variant
	}
	return ""
}

type FlagAssigned_DefaultAssignment struct {
	state         protoimpl.MessageState                                 `protogen:"open.v1"`
	Reason        FlagAssigned_DefaultAssignment_DefaultAssignmentReason `protobuf:"varint,1,opt,name=reason,proto3,enum=confidence.flags.resolver.v1.events.FlagAssigned_DefaultAssignment_DefaultAssignmentReason" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FlagAssigned_DefaultAssignment) Reset() {
	*x = FlagAssigned_DefaultAssignment{}
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FlagAssigned_DefaultAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FlagAssigned_DefaultAssignment) ProtoMessage() {}

func (x *FlagAssigned_DefaultAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_confidence_flags_resolver_v1_events_events_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FlagAssigned_DefaultAssignment.ProtoReflect.Descriptor instead.
func (*FlagAssigned_DefaultAssignment) Descriptor() ([]byte, []int) {
	return file_confidence_flags_resolver_v1_events_events_proto_rawDescGZIP(), []int{1, 2}
}

func (x *FlagAssigned_DefaultAssignment) GetReason() FlagAssigned_DefaultAssignment_DefaultAssignmentReason {
	if x != nil {
		return x.Reason
	}
	return FlagAssigned_DefaultAssignment_DEFAULT_ASSIGNMENT_REASON_UNSPECIFIED
}

var File_confidence_flags_resolver_v1_events_events_proto protoreflect.FileDescriptor

const file_confidence_flags_resolver_v1_events_events_proto_rawDesc = "" +
	"\n" +
	"0confidence/flags/resolver/v1/events/events.proto\x12#confidence.flags.resolver.v1.events\x1a&confidence/events/v1/annotations.proto\x1a\x1cgoogle/protobuf/struct.proto\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x19google/api/resource.proto\x1a(confidence/flags/resolver/v1/types.proto\"\xd0\x01\n" +
	"\n" +
	"ClientInfo\x126\n" +
	"\x06client\x18\x01 \x01(\tB\x1e\xfaA\x1b\n" +
	"\x19iam.confidence.dev/ClientR\x06client\x12U\n" +
	"\x11client_credential\x18\x02 \x01(\tB(\xfaA%\n" +
	"#iam.confidence.dev/ClientCredentialR\x10clientCredential\x123\n" +
	"\x03sdk\x18\x03 \x01(\v2!.confidence.flags.resolver.v1.SdkR\x03sdk\"\xb5\n" +
	"\n" +
	"\fFlagAssigned\x12\x1d\n" +
	"\n" +
	"resolve_id\x18\n" +
	" \x01(\tR\tresolveId\x12P\n" +
	"\vclient_info\x18\x03 \x01(\v2/.confidence.flags.resolver.v1.events.ClientInfoR\n" +
	"clientInfo\x12S\n" +
	"\x05flags\x18\x0f \x03(\v2=.confidence.flags.resolver.v1.events.FlagAssigned.AppliedFlagR\x05flags\x1a\x96\x05\n" +
	"\vAppliedFlag\x122\n" +
	"\x04flag\x18\x01 \x01(\tB\x1e\xfaA\x1b\n" +
	"\x19flags.confidence.dev/FlagR\x04flag\x12#\n" +
	"\rtargeting_key\x18\x02 \x01(\tR\ftargetingKey\x124\n" +
	"\x16targeting_key_selector\x18\x03 \x01(\tR\x14targetingKeySelector\x12k\n" +
	"\x0fassignment_info\x18\x04 \x01(\v2@.confidence.flags.resolver.v1.events.FlagAssigned.AssignmentInfoH\x00R\x0eassignmentInfo\x12t\n" +
	"\x12default_assignment\x18\x05 \x01(\v2C.confidence.flags.resolver.v1.events.FlagAssigned.DefaultAssignmentH\x00R\x11defaultAssignment\x12#\n" +
	"\rassignment_id\x18\x06 \x01(\tR\fassignmentId\x122\n" +
	"\x04rule\x18\a \x01(\tB\x1e\xfaA\x1b\n" +
	"\x19flags.confidence.dev/RuleR\x04rule\x12s\n" +
	"\x17fallthrough_assignments\x18\b \x03(\v2:.confidence.flags.resolver.v1.events.FallthroughAssignmentR\x16fallthroughAssignments\x129\n" +
	"\n" +
	"apply_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tapplyTimeB\f\n" +
	"\n" +
	"assignment\x1a\x8e\x01\n" +
	"\x0eAssignmentInfo\x12;\n" +
	"\asegment\x18\x01 \x01(\tB!\xfaA\x1e\n" +
	"\x1cflags.confidence.dev/SegmentR\asegment\x12?\n" +
	"\avariant\x18\x02 \x01(\tB%\xfaA\"\n" +
	" flags.confidence.dev/FlagVariantR\avariant\x1a\x94\x02\n" +
	"\x11DefaultAssignment\x12s\n" +
	"\x06reason\x18\x01 \x01(\x0e2[.confidence.flags.resolver.v1.events.FlagAssigned.DefaultAssignment.DefaultAssignmentReasonR\x06reason\"\x89\x01\n" +
	"\x17DefaultAssignmentReason\x12)\n" +
	"%DEFAULT_ASSIGNMENT_REASON_UNSPECIFIED\x10\x00\x12\x14\n" +
	"\x10NO_SEGMENT_MATCH\x10\x01\x12\x1a\n" +
	"\x12NO_TREATMENT_MATCH\x10\x02\x1a\x02\b\x01\x12\x11\n" +
	"\rFLAG_ARCHIVED\x10\x03:\x1e\xf2\xb7\xbf\x10\x19\x12\x17A flag has been applied\"\xcb\x01\n" +
	"\x15FallthroughAssignment\x122\n" +
	"\x04rule\x18\x01 \x01(\tB\x1e\xfaA\x1b\n" +
	"\x19flags.confidence.dev/RuleR\x04rule\x12#\n" +
	"\rassignment_id\x18\x02 \x01(\tR\fassignmentId\x12#\n" +
	"\rtargeting_key\x18\x03 \x01(\tR\ftargetingKey\x124\n" +
	"\x16targeting_key_selector\x18\x04 \x01(\tR\x14targetingKeySelectorB@\n" +
	"/com.spotify.confidence.flags.resolver.v1.eventsB\vEventsProtoP\x01b\x06proto3"

var (
	file_confidence_flags_resolver_v1_events_events_proto_rawDescOnce sync.Once
	file_confidence_flags_resolver_v1_events_events_proto_rawDescData []byte
)

func file_confidence_flags_resolver_v1_events_events_proto_rawDescGZIP() []byte {
	file_confidence_flags_resolver_v1_events_events_proto_rawDescOnce.Do(func() {
		file_confidence_flags_resolver_v1_events_events_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_confidence_flags_resolver_v1_events_events_proto_rawDesc), len(file_confidence_flags_resolver_v1_events_events_proto_rawDesc)))
	})
	return file_confidence_flags_resolver_v1_events_events_proto_rawDescData
}

var file_confidence_flags_resolver_v1_events_events_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_confidence_flags_resolver_v1_events_events_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_confidence_flags_resolver_v1_events_events_proto_goTypes = []any{
	(FlagAssigned_DefaultAssignment_DefaultAssignmentReason)(0), // 0: confidence.flags.resolver.v1.events.FlagAssigned.DefaultAssignment.DefaultAssignmentReason
	(*ClientInfo)(nil),                     // 1: confidence.flags.resolver.v1.events.ClientInfo
	(*FlagAssigned)(nil),                   // 2: confidence.flags.resolver.v1.events.FlagAssigned
	(*FallthroughAssignment)(nil),          // 3: confidence.flags.resolver.v1.events.FallthroughAssignment
	(*FlagAssigned_AppliedFlag)(nil),       // 4: confidence.flags.resolver.v1.events.FlagAssigned.AppliedFlag
	(*FlagAssigned_AssignmentInfo)(nil),    // 5: confidence.flags.resolver.v1.events.FlagAssigned.AssignmentInfo
	(*FlagAssigned_DefaultAssignment)(nil), // 6: confidence.flags.resolver.v1.events.FlagAssigned.DefaultAssignment
	(*resolvertypes.Sdk)(nil),              // 7: confidence.flags.resolver.v1.Sdk
	(*timestamppb.Timestamp)(nil),          // 8: google.protobuf.Timestamp
}
var file_confidence_flags_resolver_v1_events_events_proto_depIdxs = []int32{
	7, // 0: confidence.flags.resolver.v1.events.ClientInfo.sdk:type_name -> confidence.flags.resolver.v1.Sdk
	1, // 1: confidence.flags.resolver.v1.events.FlagAssigned.client_info:type_name -> confidence.flags.resolver.v1.events.ClientInfo
	4, // 2: confidence.flags.resolver.v1.events.FlagAssigned.flags:type_name -> confidence.flags.resolver.v1.events.FlagAssigned.AppliedFlag
	5, // 3: confidence.flags.resolver.v1.events.FlagAssigned.AppliedFlag.assignment_info:type_name -> confidence.flags.resolver.v1.events.FlagAssigned.AssignmentInfo
	6, // 4: confidence.flags.resolver.v1.events.FlagAssigned.AppliedFlag.default_assignment:type_name -> confidence.flags.resolver.v1.events.FlagAssigned.DefaultAssignment
	3, // 5: confidence.flags.resolver.v1.events.FlagAssigned.AppliedFlag.fallthrough_assignments:type_name -> confidence.flags.resolver.v1.events.FallthroughAssignment
	8, // 6: confidence.flags.resolver.v1.events.FlagAssigned.AppliedFlag.apply_time:type_name -> google.protobuf.Timestamp
	0, // 7: confidence.flags.resolver.v1.events.FlagAssigned.DefaultAssignment.reason:type_name -> confidence.flags.resolver.v1.events.FlagAssigned.DefaultAssignment.DefaultAssignmentReason
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_confidence_flags_resolver_v1_events_events_proto_init() }
func file_confidence_flags_resolver_v1_events_events_proto_init() {
	if File_confidence_flags_resolver_v1_events_events_proto != nil {
		return
	}
	file_confidence_flags_resolver_v1_events_events_proto_msgTypes[3].OneofWrappers = []any{
		(*FlagAssigned_AppliedFlag_AssignmentInfo)(nil),
		(*FlagAssigned_AppliedFlag_DefaultAssignment)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_confidence_flags_resolver_v1_events_events_proto_rawDesc), len(file_confidence_flags_resolver_v1_events_events_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_confidence_flags_resolver_v1_events_events_proto_goTypes,
		DependencyIndexes: file_confidence_flags_resolver_v1_events_events_proto_depIdxs,
		EnumInfos:         file_confidence_flags_resolver_v1_events_events_proto_enumTypes,
		MessageInfos:      file_confidence_flags_resolver_v1_events_events_proto_msgTypes,
	}.Build()
	File_confidence_flags_resolver_v1_events_events_proto = out.File
	file_confidence_flags_resolver_v1_events_events_proto_goTypes = nil
	file_confidence_flags_resolver_v1_events_events_proto_depIdxs = nil
}

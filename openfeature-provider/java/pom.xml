<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.spotify.confidence</groupId>
  <artifactId>openfeature-provider-local</artifactId>
  <version>0.0.0-SNAPSHOT</version>
  <name>Confidence local resolve provider</name>

  <properties>
    <!-- Required by maven to compile Java 11 -->
    <maven.compiler.release>17</maven.compiler.release>
    <!-- Prevents the compiler version from resetting locally in Intellij -->
    <maven.compiler.source>17</maven.compiler.source>
    <maven.compiler.target>17</maven.compiler.target>
    <protobuf.version>3.25.3</protobuf.version>
    <grpc.version>1.63.0</grpc.version>
    <slf4j.version>2.0.13</slf4j.version>
    <guava.version>33.2.1-jre</guava.version>
    <assertj.version>3.25.3</assertj.version>
    <junit.version>5.10.2</junit.version>
    <mockito.version>5.12.0</mockito.version>
  </properties>


  <dependencies>
    <!-- Core dependencies -->
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>com.dylibso.chicory</groupId>
      <artifactId>wasm</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-api</artifactId>
      <version>${grpc.version}</version>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-protobuf</artifactId>
      <version>${grpc.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java</artifactId>
      <version>${protobuf.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
      <version>1.3.2</version>
    </dependency>
      <!-- gRPC dependencies for HTTP client -->
      <dependency>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-netty-shaded</artifactId>
          <version>${grpc.version}</version>
          <exclusions>
              <exclusion>
                  <groupId>com.google.guava</groupId>
                  <artifactId>guava</artifactId>
              </exclusion>
          </exclusions>
      </dependency>

      <dependency>
          <groupId>io.grpc</groupId>
          <artifactId>grpc-stub</artifactId>
          <version>${grpc.version}</version>
      </dependency>
    <dependency>
      <groupId>com.google.protobuf</groupId>
      <artifactId>protobuf-java-util</artifactId>
      <version>${protobuf.version}</version>
    </dependency>
    
    <!-- Test dependencies -->
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
      <version>${assertj.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.dylibso.chicory</groupId>
      <artifactId>runtime</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>com.dylibso.chicory</groupId>
      <artifactId>compiler</artifactId>
      <version>1.4.0</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-services</artifactId>
      <version>${grpc.version}</version>
    </dependency>
    <dependency>
      <groupId>net.bytebuddy</groupId>
      <artifactId>byte-buddy</artifactId>
      <version>1.17.6</version>
      <scope>test</scope>
    </dependency>
    <dependency>
    <groupId>org.mockito</groupId>
    <artifactId>mockito-inline</artifactId>
    <version>5.2.0</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>net.bytebuddy</groupId>
          <artifactId>byte-buddy</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>com.github.ben-manes.caffeine</groupId>
      <artifactId>caffeine</artifactId>
      <version>3.2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>3.17.0</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>io.dropwizard.metrics</groupId>
      <artifactId>metrics-core</artifactId>
      <version>4.2.32</version>
    </dependency>
    <dependency>
      <groupId>com.auth0</groupId>
      <artifactId>java-jwt</artifactId>
      <version>4.5.0</version>
    </dependency>
    <dependency>
      <groupId>dev.openfeature</groupId>
      <artifactId>sdk</artifactId>
      <version>1.6.1</version>
    </dependency>
    <dependency>
      <groupId>com.spotify</groupId>
      <artifactId>completable-futures</artifactId>
      <version>0.3.6</version>
    </dependency>
  </dependencies>

  <build>
    <extensions>
      <extension>
        <groupId>kr.motd.maven</groupId>
        <artifactId>os-maven-plugin</artifactId>
        <version>1.7.1</version>
      </extension>
    </extensions>
    <plugins>
      <!-- Generate Java and gRPC sources from local .proto files -->
      <plugin>
        <groupId>org.xolstice.maven.plugins</groupId>
        <artifactId>protobuf-maven-plugin</artifactId>
        <version>0.6.1</version>
        <configuration>
          <protocArtifact>com.google.protobuf:protoc:${protobuf.version}:exe:${os.detected.classifier}</protocArtifact>
          <pluginId>grpc-java</pluginId>
          <pluginArtifact>io.grpc:protoc-gen-grpc-java:${grpc.version}:exe:${os.detected.classifier}</pluginArtifact>
        </configuration>
        <executions>
          <!-- Compile local provider protos (e.g., confidence/wasm/messages.proto) -->
          <execution>
            <id>compile-provider-protos</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>compile</goal>
              <goal>compile-custom</goal>
            </goals>
            <configuration>
              <protoSourceRoot>${project.basedir}/src/main/proto</protoSourceRoot>
              <additionalProtoPathElements>
                <additionalProtoPathElement>${project.basedir}/src/main/proto</additionalProtoPathElement>
                <additionalProtoPathElement>/Users/fdema/Developer/github/confidence-resolver-rust/confidence-resolver/protos</additionalProtoPathElement>
              </additionalProtoPathElements>
            </configuration>
          </execution>
          <!-- Compile the Confidence API protos from this repo to satisfy imports and stubs -->
          <execution>
            <id>compile-confidence-protos</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>compile</goal>
              <goal>compile-custom</goal>
            </goals>
            <configuration>
              <protoSourceRoot>/Users/fdema/Developer/github/confidence-resolver-rust/confidence-resolver/protos</protoSourceRoot>
              <includes>
                <include>confidence/flags/resolver/v1/**/*.proto</include>
                <include>confidence/flags/types/v1/**/*.proto</include>
                <include>confidence/flags/admin/v1/**/*.proto</include>
                <include>confidence/iam/v1/**/*.proto</include>
                <include>confidence/auth/v1/**/*.proto</include>
                <include>google/api/**/*.proto</include>
                <include>google/type/decimal.proto</include>
                <include>confidence/api/annotations.proto</include>
                <include>confidence/events/v1/annotations.proto</include>
              </includes>
              <additionalProtoPathElements>
                <additionalProtoPathElement>${project.basedir}/src/main/proto</additionalProtoPathElement>
              </additionalProtoPathElements>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Ensure generated proto sources are added to the compile source path -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>build-helper-maven-plugin</artifactId>
        <version>3.5.0</version>
        <executions>
          <execution>
            <id>add-proto-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>add-source</goal>
            </goals>
            <configuration>
              <sources>
                <source>${project.build.directory}/generated-sources/protobuf/java</source>
                <source>${project.build.directory}/generated-sources/protobuf/grpc-java</source>
              </sources>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Makefile copies local WASM into resources; no download/clean plugin needed -->
      
      <!-- JUnit 5 -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.2.5</version>
        <configuration>
          <useModulePath>false</useModulePath>
        </configuration>
      </plugin>
    </plugins>

    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
        <excludes>
          <exclude>**/*.wasm</exclude>
        </excludes>
      </resource>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>false</filtering>
        <includes>
          <include>**/*.wasm</include>
        </includes>
      </resource>
    </resources>
  </build>

</project>
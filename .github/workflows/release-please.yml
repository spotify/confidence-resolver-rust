name: Release Please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      release_created: ${{ steps.release.outputs.release_created }}
      releases_created: ${{ steps.release.outputs.releases_created }}
      tag_name: ${{ steps.release.outputs.tag_name }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Release Please (manifest)
        id: release
        uses: googleapis/release-please-action@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          config-file: release-please-config.json
          manifest-file: .release-please-manifest.json

  publish-wasm:
    needs: release
    if: ${{ needs.release.outputs.releases_created == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract confidence_resolver version and tag
        id: extract_version
        run: |
          VERSION=$(grep -m1 '^version\s*=\s*"' confidence-resolver/Cargo.toml | sed -E 's/.*"([^"]+)".*/\1/')
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          echo "TAG_NAME=confidence_resolver-v$VERSION" >> $GITHUB_ENV

      - name: Build and extract WASM artifact
        uses: docker/build-push-action@v6
        with:
          context: .
          target: wasm-rust-guest.artifact
          outputs: type=local,dest=./artifacts
          cache-from: type=registry,ref=ghcr.io/${{ github.repository }}/cache:main
          # Note: No cache-to - releases only consume cache, don't update it

      - name: Upload WASM to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: |
            artifacts/confidence_resolver.wasm
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-cloudflare-deployer-image:
    needs: release
    if: ${{ needs.release.outputs.releases_created == 'true' }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract confidence-cloudflare-resolver version and tag
        id: extract_ccr_version
        run: |
          VERSION=$(grep -m1 '^version\s*=\s*"' confidence-cloudflare-resolver/Cargo.toml | sed -E 's/.*"([^\"]+)".*/\1/')
          echo "CCR_VERSION=$VERSION" >> $GITHUB_ENV
          echo "CCR_TAG_NAME=confidence-cloudflare-resolver-v$VERSION" >> $GITHUB_ENV

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/confidence-cloudflare-deployer
          tags: |
            type=raw,value=${{ env.CCR_TAG_NAME }}
            type=raw,value=latest

      - name: Build and push deployer image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./confidence-cloudflare-resolver/deployer/Dockerfile
          push: true
          build-args: |
            COMMIT_SHA=${{ github.sha }}
          platforms: linux/amd64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}


